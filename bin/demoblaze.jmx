<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan">
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
    </TestPlan>
    <hashTree>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">true</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/index.html-81">
            <stringProp name="HTTPSampler.domain">www.demoblaze.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/index.html</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;127&quot;, &quot;Chromium&quot;;v=&quot;127&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/css/fonts/Lato-Regular.woff2-94">
            <stringProp name="HTTPSampler.domain">www.demoblaze.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/css/fonts/Lato-Regular.woff2</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com/css/latofonts.css</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;127&quot;, &quot;Chromium&quot;;v=&quot;127&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">font</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/config.json-98">
            <stringProp name="HTTPSampler.domain">www.demoblaze.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/config.json</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com/index.html</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;127&quot;, &quot;Chromium&quot;;v=&quot;127&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/entries-100">
            <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/entries</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;127&quot;, &quot;Chromium&quot;;v=&quot;127&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/signup-108" enabled="false">
            <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/signup</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">content-type</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/signup-109">
            <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/signup</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;username&quot;:&quot;abhishek&quot;,&quot;password&quot;:&quot;RGVtb0AxMjM=&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;127&quot;, &quot;Chromium&quot;;v=&quot;127&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/signup-111" enabled="false">
            <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/signup</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">content-type</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/signup-112">
            <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/signup</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;username&quot;:&quot;abhishek1&quot;,&quot;password&quot;:&quot;RGVtb0AxMjM=&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;127&quot;, &quot;Chromium&quot;;v=&quot;127&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/signup-114" enabled="false">
            <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/signup</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">content-type</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/signup-115">
            <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/signup</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;username&quot;:&quot;abhishek1!&quot;,&quot;password&quot;:&quot;RGVtb0AxMjM=&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;127&quot;, &quot;Chromium&quot;;v=&quot;127&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/login-118" enabled="false">
            <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/login</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">content-type</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/login-119">
            <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/login</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;username&quot;:&quot;abhishek1!&quot;,&quot;password&quot;:&quot;RGVtb0AxMjM=&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;127&quot;, &quot;Chromium&quot;;v=&quot;127&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor Auth_token">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">Auth_token</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;Auth_token: (.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Auth_token not found</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/index.html-120">
            <stringProp name="HTTPSampler.domain">www.demoblaze.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/index.html</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com/index.html</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;127&quot;, &quot;Chromium&quot;;v=&quot;127&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/config.json-137">
            <stringProp name="HTTPSampler.domain">www.demoblaze.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/config.json</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com/index.html</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;127&quot;, &quot;Chromium&quot;;v=&quot;127&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/check-139" enabled="false">
            <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/check</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">content-type</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/entries-140">
            <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/entries</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;127&quot;, &quot;Chromium&quot;;v=&quot;127&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/check-141">
            <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/check</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;token&quot;:&quot;${Auth_token}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;127&quot;, &quot;Chromium&quot;;v=&quot;127&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/bycat-149" enabled="false">
            <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/bycat</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">content-type</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/bycat-150">
            <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/bycat</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;cat&quot;:&quot;${__chooseRandom(phone,notebook,monitor,)}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;127&quot;, &quot;Chromium&quot;;v=&quot;127&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/bycat-151" enabled="false">
            <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/bycat</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;cat&quot;:&quot;notebook&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;127&quot;, &quot;Chromium&quot;;v=&quot;127&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/extensionrevocation/v1/threatListUpdates:fetch-154" enabled="false">
            <stringProp name="HTTPSampler.domain">edge.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/extensionrevocation/v1/threatListUpdates:fetch</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="req" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">req</stringProp>
                  <stringProp name="Argument.value">ChcKBm1zZWRnZRINMTI3LjAuMjY1MS45OBobCAEQCBoNMTcyNDIxOTg4MTE4MiIEIAEgAigEIgIIAQ==</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ct" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ct</stringProp>
                  <stringProp name="Argument.value">application/x-protobuf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">key</stringProp>
                  <stringProp name="Argument.value">d414dd4f9db345fa8003e32adc81b362</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Sec-Mesh-Client-Arch" elementType="Header">
                  <stringProp name="Header.name">Sec-Mesh-Client-Arch</stringProp>
                  <stringProp name="Header.value">x86_64</stringProp>
                </elementProp>
                <elementProp name="Sec-Mesh-Client-OS" elementType="Header">
                  <stringProp name="Header.name">Sec-Mesh-Client-OS</stringProp>
                  <stringProp name="Header.value">Windows</stringProp>
                </elementProp>
                <elementProp name="X-HTTP-Method-Override" elementType="Header">
                  <stringProp name="Header.name">X-HTTP-Method-Override</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Sec-Mesh-Client-Edge-Version" elementType="Header">
                  <stringProp name="Header.name">Sec-Mesh-Client-Edge-Version</stringProp>
                  <stringProp name="Header.value">127.0.2651.98</stringProp>
                </elementProp>
                <elementProp name="Sec-Mesh-Client-Edge-Channel" elementType="Header">
                  <stringProp name="Header.name">Sec-Mesh-Client-Edge-Channel</stringProp>
                  <stringProp name="Header.value">stable</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36 Edg/127.0.0.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Mesh-Client-OS-Version" elementType="Header">
                  <stringProp name="Header.name">Sec-Mesh-Client-OS-Version</stringProp>
                  <stringProp name="Header.value">10.0.22631</stringProp>
                </elementProp>
                <elementProp name="Sec-Mesh-Client-WebView" elementType="Header">
                  <stringProp name="Header.name">Sec-Mesh-Client-WebView</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/bycat-155" enabled="false">
            <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/bycat</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;cat&quot;:&quot;monitor&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;127&quot;, &quot;Chromium&quot;;v=&quot;127&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/bycat-158" enabled="false">
            <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/bycat</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">content-type</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/bycat-159" enabled="false">
            <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/bycat</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;cat&quot;:&quot;notebook&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;127&quot;, &quot;Chromium&quot;;v=&quot;127&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/safebrowsing/clientreport/realtime-163" enabled="false">
            <stringProp name="HTTPSampler.domain">safebrowsing.google.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/safebrowsing/clientreport/realtime</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#xd;
*https://www.demoblaze.com/prod.html?idp_=9&#x10;&#x1;&#x1a;a&#x8;&#x3;&#x10;&#x1;(&#x2;0&#x0;8&#x0;@&#x1;J&#x1d;Chrome/127.0.6533.120/WindowsP&#x2;X&#x2;`&#x1;r+&#x8;&#x1;&#x10;뾴��2&#x1a; �2��&#x15;u&#x1;�-R(RBcA�q�0�&#x1a;��y�FI�k��&#x0;�&#x1;&#x1;0&#x3;8&#x7;Bv&#xd;
*https://www.demoblaze.com/prod.html?idp_=9&#x10;&#x1;&#x1a;&#xf;142.250.206.147&quot;$https://www.demoblaze.com/index.html0&#x1;9&#x0;���&lt;&#x17;yBP&#x3;X&#x0;p&#x0;H&#x1;P&#x1;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ya29.a0AcM612x6hdaxt42fWM9jgP-rIE21IO-NcJrfKeVvnuA-dl67aFCH9RWtT0-4-h70hJdiirj7HL659N7mA7it1p6-hZBjEn9n-PTcqcEiR2KZPJT3ICo__2sizxVRnYdOAHHQ5tpzKfcF5kx3NkKkqA93cSmTgGJ8zpJIo8Mm3emupkVM4OvP4iMNRrXARsv45HXSQGdj27pRR6sL_k17MPV_w9OaX_IrUaNpQvsNuyRQ7SQ3GrFGpu1f5EgPYUKEynyp2EJcosIp7AaCgYKAWYSARMSFQHGX2MiT2_rVhwgkojaXKTfFdI_AQ0277</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/octet-stream</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1:GetHints?-162" enabled="false">
            <stringProp name="HTTPSampler.domain">optimizationguide-pa.googleapis.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/v1:GetHints?</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x10;&#xf;&#x10;&#x14;&#x10;&#x17;&#x10;&#x1f;&#x10;#&#x18;&#x2;&quot;,&#xd;
*https://www.demoblaze.com/prod.html?idp_=9(&#x3;(&#x2;:&#x5;en-USJ&#x2;&#x8;&#x6;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="X-Goog-Api-Key" elementType="Header">
                  <stringProp name="Header.name">X-Goog-Api-Key</stringProp>
                  <stringProp name="Header.value">AIzaSyBOti4mM-6x9WDnZIjIeyEU21OpBXqWBgw</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CI22yQEIo7bJAQipncoBCIWGywEIlKHLAQic/swBCIWgzQEIiKPOAQjWrM4BCOSvzgEI2rfOAQiYu84BGOvTzQEYua7OARicsc4BGL+T1SI=</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-protobuf</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/prod.html-161">
            <stringProp name="HTTPSampler.domain">www.demoblaze.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/prod.html</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="idp_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">idp_</stringProp>
                  <stringProp name="Argument.value">9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com/index.html</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;127&quot;, &quot;Chromium&quot;;v=&quot;127&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/config.json-176">
            <stringProp name="HTTPSampler.domain">www.demoblaze.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/config.json</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com/prod.html?idp_=9</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;127&quot;, &quot;Chromium&quot;;v=&quot;127&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/check-177" enabled="false">
            <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/check</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">content-type</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/view-178" enabled="false">
            <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/view</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">content-type</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/view-179">
            <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/view</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;id&quot;:&quot;9&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;127&quot;, &quot;Chromium&quot;;v=&quot;127&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/check-180">
            <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/check</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;token&quot;:&quot;${Auth_token}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;127&quot;, &quot;Chromium&quot;;v=&quot;127&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/addtocart-181" enabled="false">
            <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/addtocart</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">content-type</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/addtocart-182">
            <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/addtocart</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;id&quot;:&quot;${__UUID()}&quot;,&quot;cookie&quot;:&quot;${Auth_token}&quot;,&quot;prod_id&quot;:9,&quot;flag&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;127&quot;, &quot;Chromium&quot;;v=&quot;127&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/safebrowsing/clientreport/realtime-184" enabled="false">
            <stringProp name="HTTPSampler.domain">safebrowsing.google.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/safebrowsing/clientreport/realtime</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#xd;
#https://www.demoblaze.com/cart.html&#x10;&#x1;&#x1a;a&#x8;&#x3;&#x10;&#x1;(&#x2;0&#x0;8&#x0;@&#x1;J&#x1d;Chrome/127.0.6533.120/WindowsP&#x2;X&#x2;`&#x1;r+&#x8;&#x1;&#x10;呵��2&#x1a; �&#x7;{!���ճȰy酔s��&#xf;n�o��5/BX3�ݻ�&#x1;&#x1;0&#x3;8&#x7;B�&#x1;&#xd;
#https://www.demoblaze.com/cart.html&#x10;&#x1;&#x1a;&#xf;142.250.206.147&#x1a;	127.0.0.1&quot;*https://www.demoblaze.com/prod.html?idp_=90&#x1;9&#x0;���&lt;&#x17;yBP&#x3;X&#x0;p&#x0;B�&#x1;&#xd;
*https://www.demoblaze.com/prod.html?idp_=9&#x10;&#x2;&#x1a;&#xf;142.250.206.147&#x1a;	127.0.0.1&quot;$https://www.demoblaze.com/index.html0&#x0;9&#x0;@&#x19;�&lt;&#x17;yBP&#x3;X&#x0;p&#x0;H&#x1;P&#x1;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ya29.a0AcM612x6hdaxt42fWM9jgP-rIE21IO-NcJrfKeVvnuA-dl67aFCH9RWtT0-4-h70hJdiirj7HL659N7mA7it1p6-hZBjEn9n-PTcqcEiR2KZPJT3ICo__2sizxVRnYdOAHHQ5tpzKfcF5kx3NkKkqA93cSmTgGJ8zpJIo8Mm3emupkVM4OvP4iMNRrXARsv45HXSQGdj27pRR6sL_k17MPV_w9OaX_IrUaNpQvsNuyRQ7SQ3GrFGpu1f5EgPYUKEynyp2EJcosIp7AaCgYKAWYSARMSFQHGX2MiT2_rVhwgkojaXKTfFdI_AQ0277</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/octet-stream</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/cart.html-183">
            <stringProp name="HTTPSampler.domain">www.demoblaze.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/cart.html</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com/prod.html?idp_=9</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;127&quot;, &quot;Chromium&quot;;v=&quot;127&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager">
            <collectionProp name="AuthManager.auth_list">
              <elementProp name="" elementType="Authorization">
                <stringProp name="Authorization.url">https://substrate.office.com/profileb2/v2.0/me/</stringProp>
                <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                <stringProp name="Authorization.domain"></stringProp>
                <stringProp name="Authorization.realm"></stringProp>
                <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
              </elementProp>
              <elementProp name="" elementType="Authorization">
                <stringProp name="Authorization.url">https://play.google.com/</stringProp>
                <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                <stringProp name="Authorization.domain"></stringProp>
                <stringProp name="Authorization.realm"></stringProp>
                <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
              </elementProp>
              <elementProp name="" elementType="Authorization">
                <stringProp name="Authorization.url">https://www.youtube.com/youtubei/v1/</stringProp>
                <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                <stringProp name="Authorization.domain"></stringProp>
                <stringProp name="Authorization.realm"></stringProp>
                <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
              </elementProp>
            </collectionProp>
            <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
          </AuthManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/profileb2/v2.0/me/V1Profile-199" enabled="false">
            <stringProp name="HTTPSampler.domain">substrate.office.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/profileb2/v2.0/me/V1Profile</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9,en-IN;q=0.8</stringProp>
                </elementProp>
                <elementProp name="X-AnchorMailbox" elementType="Header">
                  <stringProp name="Header.name">X-AnchorMailbox</stringProp>
                  <stringProp name="Header.value">CID:0ab67668f51edbcc</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36 Edg/127.0.0.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/config.json-200">
            <stringProp name="HTTPSampler.domain">www.demoblaze.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/config.json</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com/cart.html</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;127&quot;, &quot;Chromium&quot;;v=&quot;127&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/check-201" enabled="false">
            <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/check</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">content-type</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/viewcart-202" enabled="false">
            <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/viewcart</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">content-type</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/check-203">
            <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/check</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;token&quot;:&quot;${Auth_token}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;127&quot;, &quot;Chromium&quot;;v=&quot;127&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/viewcart-204">
            <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/viewcart</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;cookie&quot;:&quot;${Auth_token}&quot;,&quot;flag&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;127&quot;, &quot;Chromium&quot;;v=&quot;127&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/view-205" enabled="false">
            <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/view</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">content-type</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/view-206">
            <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/view</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;id&quot;:9}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;127&quot;, &quot;Chromium&quot;;v=&quot;127&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/log?format=json&amp;hasfast=true&amp;authuser=0-208" enabled="false">
            <stringProp name="HTTPSampler.domain">play.google.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/log?format=json&amp;hasfast=true&amp;authuser=0</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[[1,null,null,null,null,null,null,null,null,null,[null,null,null,null,&quot;en&quot;,null,&quot;26&quot;,null,[[[&quot;Not)A;Brand&quot;,&quot;99&quot;],[&quot;Google Chrome&quot;,&quot;127&quot;],[&quot;Chromium&quot;,&quot;127&quot;]],0,&quot;Windows&quot;,&quot;15.0.0&quot;,&quot;x86&quot;,&quot;&quot;,&quot;127.0.6533.120&quot;],[1,0,0,0,0]]],1828,[[&quot;1724224725111&quot;,null,null,null,null,null,null,&quot;[[[\&quot;/client_streamz/bg/el\&quot;,null,[\&quot;en\&quot;,\&quot;bk\&quot;,\&quot;rk\&quot;,\&quot;mk\&quot;],[[[[\&quot;c\&quot;],[\&quot;\&quot;],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;],[\&quot;_\&quot;]],[null,0.29999999701976776]],[[[\&quot;C\&quot;],[\&quot;\&quot;],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;],[\&quot;_\&quot;]],[null,1.2999999970197678]],[[[\&quot;W\&quot;],[\&quot;\&quot;],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;],[\&quot;_\&quot;]],[null,1.2000000029802322]],[[[\&quot;x\&quot;],[\&quot;\&quot;],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;],[\&quot;_\&quot;]],[null,0]],[[[\&quot;m\&quot;],[\&quot;\&quot;],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;],[\&quot;_\&quot;]],[null,4.200000002980232]]]],[\&quot;/client_streamz/bg/po/cwsc\&quot;,null,[\&quot;su\&quot;,\&quot;rk\&quot;,\&quot;mk\&quot;],[[[[\&quot;s\&quot;],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;],[\&quot;_\&quot;]],[1]]]]]]&quot;,null,null,null,null,null,null,-19800,[null,null,null,&quot;[]&quot;],null,null,null,null,27]],&quot;1724224725111&quot;]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.youtube.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.youtube.com</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-full-version-list" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-full-version-list</stringProp>
                  <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;99.0.0.0&quot;, &quot;Google Chrome&quot;;v=&quot;127.0.6533.120&quot;, &quot;Chromium&quot;;v=&quot;127.0.6533.120&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CI22yQEIo7bJAQipncoBCIWGywEIlKHLAQic/swBCIWgzQEIiKPOAQjWrM4BCOSvzgEI2rfOAQiYu84BGOvTzQEYua7OARicsc4BGL+T1SI=</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-form-factors" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-form-factors</stringProp>
                  <stringProp name="Header.value">&quot;Desktop&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform-version" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform-version</stringProp>
                  <stringProp name="Header.value">&quot;15.0.0&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-full-version" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-full-version</stringProp>
                  <stringProp name="Header.value">&quot;127.0.6533.120&quot;</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-arch" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-arch</stringProp>
                  <stringProp name="Header.value">&quot;x86&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;127&quot;, &quot;Chromium&quot;;v=&quot;127&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Goog-AuthUser" elementType="Header">
                  <stringProp name="Header.name">X-Goog-AuthUser</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-bitness" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-bitness</stringProp>
                  <stringProp name="Header.value">&quot;64&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-model" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-model</stringProp>
                  <stringProp name="Header.value">&quot;&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-wow64" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-wow64</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/youtubei/v1/log_event?alt=json&amp;key=AIzaSyAO_FJ2SlqU8Q4STEHLGCilw_Y9_11qcW8-209" enabled="false">
            <stringProp name="HTTPSampler.domain">www.youtube.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/youtubei/v1/log_event?alt=json&amp;key=AIzaSyAO_FJ2SlqU8Q4STEHLGCilw_Y9_11qcW8</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x3;�X&#xb;o�H&#x12;�+&#x8;�F3RB��;{s&apos;�6�e�&#xf;&#x8;�[!c7`������������쮴RV�;&quot;�����������IA�E��[ݏB��h&#x13;�o�4�_�&#x5c8;�&#x6;�j��bZ�e�&#x7f;Ni��i&#x2;:�A&#x18;�32+6&#x18;��0h�&amp;�p�MV)�����$/�(R��&#x3;��X��yG��&#xf;�ę\�&#xf;疩�l�&#x5f5;��C����-�=*&#x6;��u�Sʄ&#x18;��q�5um����Τ�ή�M{&#x16;-A6��?�`�&#x19;�2c��Mg�dm�Xf��k}�F�P�P�^&lt;�&#xd;�s�;{(k���liƬ�2Ⅸ�&#x13;���&#xf;J�.&#x5;���&#x1b;�,+m��^h&#x1b;�� GϾF�ֿ�/[&#x6;}�Zzvr&amp;�}&#x1f;9��&#x1;�&#x1d;&#x1d;�Ŧ;�d�z�N�&#x1c;�s�8&#xf;�q�@&#x1c;�ֿo�&#x1e;{&#x1d;c^��%�e�&#x14;�C&#x19;���P��.���q���yr&#x1f;}Q;��C���eN�&#x17;&#x1d;e��&#x8;c;&apos;&#x18;�`uD��*W&#x6;+�ltI�CXY�1�b&#x1c;��&#x1c;mC&#x1a;&#x1e;`�p]�y�A���P�&gt;E_��}�7µT&#xf;�&#x3;��MP��D�%-}&#x1e;&#x10;&#x17;e�4C�ฐ���N&#x1c;�6�6S{�&#xc;�I�ٻM6I�I�nL�����Q��&#x16;&#x5;�r��j&#x7f;u���M��%�&gt;M9}��Ӟ���&amp;�lܻ�kF랝h$��0�&gt;3坐�,��Ž�q��{�8ʃ&#x19;+��u�6&#x3;�8�ɜ1̜�M&amp;�.Nu}�k�8��!Սx&#x1a;+��Nxg��&lt;go�&#x19;�o���靗o^��&#x4;&#x11;��&#x6;��q}2&#x1e;&apos;���3Cux1��i�&#xe;O��6��&#x19;im���&#x7;g��S��w�]��g�i渳)٘��p6&#x12;36��Ÿ7t�w&#xb;3&gt;��xz	8_&#x1c;����s�T5f���&#xe;&#x1b;�|mZ&#x18;&#x1d;��h=�F�9�k�h�?�w&#x1b;ۍܣי0#]�����&#x10;�5ٚ��X��Ɋ�G�6Z�j&#x1a;C�ql���d~��hf&amp;��ޙ�=�^\�&#x1f;ݤu6�&#x1e;&#x19;MS���&#x1a;dd�&#x16;?L��qd;�aOX�q&apos;���#$�3��3��P�߳w�V7�&#x7;���[7^�V&#x7f;��C����x&#xd;��p���&#x3;ʎ�&#x15;�Zk�\��&#x5;E�&#x16;��&#x2;dfv&#x4;�0&gt;�l!Aх�&#x2;&#xf;���H(c�Gԫ6fOj�l�ߡ�ꄲ����&#x0;&#x8;��y&#xc;��@GYY��M�&#x17;V�e��	&#xd;
�q�ng�5W�.:�\K�L]�U�I@&#x2;aIX�b�d�D�`��n�}�[��U��Ӭ�.���0}&#xc;�Ȼ&#x11;&#x1a;L��,L����&#xc;��2&#xd;�&#x1a;&#x8;D���Y�Ԛ�}Dgt�&#xf;�&#x1b;��&#x1a;�X�ܿ����Z&#x14;�h�C�]����diLoX&quot;5&#x18;��Y����&apos;&#x13;�7��Q��4���G��n�&#xd;&quot;�X�	�&#x0;��&#xd;t�K5���w&#x19;�&#x1;�b���Z�]k&lt;h�&#x17;Ñ�-Z�hfi&amp;&#x6;&#x16;�8�.v&#xd;
&#x17;V&#x7f;y)h&#xe;�2S~��-�~&#x1;W�}��T�a,��`�&#xc;����2��iVݘ�*�W����&#x12;&#x1e;&#xc;����S�J�&#x1b;�J&#xb;B(Vi&#x16;�Dլ�=&#x1a;&#x5ff;���&#x8;�&#x0;~��[&#x5;�0�C��J�&apos;�&#x17;$�QDHZ&#x14;j8��&#xd;
&#x7f;�y����&#x6;ګu&#x0;�	R�8��H�&#x15;�ֆF� ����ʋr&#xd;
�~��9�Tw���XG�A�1�&#x19;��,��M�ЬAwa4��b&gt;rl��-p&#x19;&#xc;͞�����&amp;�fٸ��W&lt;�[v����,G��&#xb;��������K��3�&#x1f;�7�;��r�mͲ~H�&#x19;�&#xf;�&#x7f;��3�@�&#xc;����m_&#x15;yyф�r�M��Q&#x17;&#x5;F�8&#x1e;&#x17;��K%2&#xd;
Ǿ4YZ��&#x19;ND&#x11;&#xc;i�&#x5;�A������ɰE�&#x14;�&gt;���9�N�Kz(&#xe;K����愋���ׁ�i.&lt;B�&lt;�&#x14;�y�u&lt;�����{��w���G?r��TZ6��U�k��	� =&#x7f;�:�&#x1d;�^�U���&#x17;�&lt;k&#x1c;���U��E&#x7;��&gt;�\�_h�k��&#xd;
K�:�{���|�=��&#x4;�&#x18;�&#x14;L���7��4]G��M��{���yq�(�n�&#xc;g��u&#x2;;&apos;{�b���J�&apos;&#x7f;��%�9I^���lG�:PV�oZ���&#xb;�E���mp8)�ޥ�.�R}��&gt;m�,&#xd;긁�yO3���[�*�&#x14;Yd�p&#x5;Iex��&#x1;&#x10;F�D��&#x89;,&#x2;E&#x11;8&#x2;@&#x10;&#x18;^�&#x11;��(K&#x0;DE�&#x15;�&#xd;
4� &#xb;���2,C8�&#x4;&#x12;ǋ&#x8;xV`	&#x2;�&#x13;e&#x5;�ȉ&lt;W&#x2;^��%&quot;�2&#x2;&#x5;�* �R&#x5;d�H�&#x0;�ajV,&#x1;+2&quot;&#xe;��@X�&#x4;&#x12;�!&#x10;&#x0;�O�c�&#x1;)�,��*+&#xd;
|e&#xe;&#x1;Wʒİ\	d`C C���,&#xd;
&#x4;)&#x8;&#x3;� ;a%��&#x2;�}&#x5;�&#xd;
&#x10;A��&#x12;H�̖&#x0;&#x2;e�&#x1;������c�H	�ʥc��E)�9I�Ke&#x1e;�J&#x1d;X&#x15;�&#x1c;�&#x15;I,%&#x2;#1b	X8n* s�&#x13;�H&#x5;��˙&#x5;I&#x14;�&#xd;
�&#x2;W&#x2;&#x19;�&#x13;��3e��(&#xb;�&#x10;�Ǘ�K&#xc;#�V&#x18;1W&#x1;QT���#��ٙ����&#x18;-W�܇c&#x15;��&quot;;З{�B��&#x1b;��U�&#x6;&#x1f;��Ş׀����X�&gt;��9��&#x4;4�&#x15;���&#x17;Y&amp;&#x8;�p�͗a�,^���&#x12;c&#x19;����w�m~&#xb;;Ib����䉻�}(#���&#xc;�J��P&#x13;�4&gt;�T��2y%�@*��&#xd;
/&lt;	=���&#x3;�9�}�����%N&#xf;�?^=ɼ�M����o�&gt;���r�+YW]6V&#x14;��`&#x7;&#xb;ox;��&#x12;��&#x7;[��W&#x93;���&#x10;�Ƚe�Wƿ�|����������+���&#x5;z�U&#x18;ѧ&#x16;�#[Y|&amp;A�&gt;�y&#xe;�sٜC��&#xd;�f�#s1Ц�`1k���5�&#x11;&#x17;?k�u&#xf;\&#xc;jEZ+&#xb;&#x19;��ư&#xd;���&#xd;߂U�&#xe;&#x17;�&#x17;�o�p��G��0���Q�ɂ�{�&#x2;Nf�������������3J��7���5�&#x12;�&#x17;��4hW��c�Ζ]��Ћ����57#Q_�&#x14;n��c�b^7���s��&#x3;&#x10;g���8I&#x2;��&#x0;�N��+&#x17;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-YouTube-Client-Version" elementType="Header">
                  <stringProp name="Header.name">X-YouTube-Client-Version</stringProp>
                  <stringProp name="Header.value">2.20240816.01.00</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.youtube.com/watch?v=LDhA_a2eRss&amp;list=PLSVkvZFafGa-pYDvclZouV7bAvwfdsE3E&amp;index=6</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="X-Youtube-Identity-Token" elementType="Header">
                  <stringProp name="Header.name">X-Youtube-Identity-Token</stringProp>
                  <stringProp name="Header.value">QUFFLUhqbUpGbEkwc04tNEZJNmZjbDBxeVNGUHlEN05YZ3w=</stringProp>
                </elementProp>
                <elementProp name="X-Goog-Visitor-Id" elementType="Header">
                  <stringProp name="Header.name">X-Goog-Visitor-Id</stringProp>
                  <stringProp name="Header.value">CgtsR255U0ZfbmdNNCjwypK2BjIKCgJJThIEGgAgbQ%3D%3D</stringProp>
                </elementProp>
                <elementProp name="Content-Encoding" elementType="Header">
                  <stringProp name="Header.name">Content-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.youtube.com</stringProp>
                </elementProp>
                <elementProp name="X-Goog-Request-Time" elementType="Header">
                  <stringProp name="Header.name">X-Goog-Request-Time</stringProp>
                  <stringProp name="Header.value">1724224728174</stringProp>
                </elementProp>
                <elementProp name="X-YouTube-Device" elementType="Header">
                  <stringProp name="Header.name">X-YouTube-Device</stringProp>
                  <stringProp name="Header.value">cbr=Chrome&amp;cbrver=127.0.0.0&amp;ceng=WebKit&amp;cengver=537.36&amp;cos=Windows&amp;cosver=10.0&amp;cplatform=DESKTOP</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-full-version-list" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-full-version-list</stringProp>
                  <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;99.0.0.0&quot;, &quot;Google Chrome&quot;;v=&quot;127.0.6533.120&quot;, &quot;Chromium&quot;;v=&quot;127.0.6533.120&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CI22yQEIo7bJAQipncoBCIWGywEIlKHLAQic/swBCIWgzQEIiKPOAQjWrM4BCOSvzgEI2rfOAQiYu84BGOvTzQEYua7OARicsc4BGL+T1SI=</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-form-factors" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-form-factors</stringProp>
                  <stringProp name="Header.value">&quot;Desktop&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-YouTube-Utc-Offset" elementType="Header">
                  <stringProp name="Header.name">X-YouTube-Utc-Offset</stringProp>
                  <stringProp name="Header.value">330</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform-version" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform-version</stringProp>
                  <stringProp name="Header.value">&quot;15.0.0&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-full-version" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-full-version</stringProp>
                  <stringProp name="Header.value">&quot;127.0.6533.120&quot;</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-arch" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-arch</stringProp>
                  <stringProp name="Header.value">&quot;x86&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-Goog-Event-Time" elementType="Header">
                  <stringProp name="Header.name">X-Goog-Event-Time</stringProp>
                  <stringProp name="Header.value">1724224728160</stringProp>
                </elementProp>
                <elementProp name="X-YouTube-Time-Zone" elementType="Header">
                  <stringProp name="Header.name">X-YouTube-Time-Zone</stringProp>
                  <stringProp name="Header.value">Asia/Calcutta</stringProp>
                </elementProp>
                <elementProp name="X-YouTube-Client-Name" elementType="Header">
                  <stringProp name="Header.name">X-YouTube-Client-Name</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="X-YouTube-Page-Label" elementType="Header">
                  <stringProp name="Header.name">X-YouTube-Page-Label</stringProp>
                  <stringProp name="Header.value">youtube.desktop.web_20240816_01_RC00</stringProp>
                </elementProp>
                <elementProp name="X-YouTube-Ad-Signals" elementType="Header">
                  <stringProp name="Header.name">X-YouTube-Ad-Signals</stringProp>
                  <stringProp name="Header.value">dt=1724163440890&amp;flash=0&amp;frm&amp;u_tz=330&amp;u_his=11&amp;u_h=864&amp;u_w=1536&amp;u_ah=816&amp;u_aw=1536&amp;u_cd=24&amp;bc=31&amp;bih=730&amp;biw=1519&amp;brdim=0%2C0%2C0%2C0%2C1536%2C0%2C1536%2C816%2C1536%2C730&amp;vis=2&amp;wgl=true&amp;ca_type=image&amp;bid=ANyPxKr-pFefm1w6qii7Q4faznNn4Ugx12_s62VIzqb4JzL3Q-a_cb9tN1nX_M7cnYDoNAJIlDC7FO27esrsbCM7ERmyNUqcNg</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;127&quot;, &quot;Chromium&quot;;v=&quot;127&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Goog-AuthUser" elementType="Header">
                  <stringProp name="Header.name">X-Goog-AuthUser</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-bitness" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-bitness</stringProp>
                  <stringProp name="Header.value">&quot;64&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Origin" elementType="Header">
                  <stringProp name="Header.name">X-Origin</stringProp>
                  <stringProp name="Header.value">https://www.youtube.com</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-model" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-model</stringProp>
                  <stringProp name="Header.value">&quot;&quot;</stringProp>
                </elementProp>
                <elementProp name="X-YouTube-Page-CL" elementType="Header">
                  <stringProp name="Header.name">X-YouTube-Page-CL</stringProp>
                  <stringProp name="Header.value">663631070</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-wow64" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-wow64</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/generate_204-211" enabled="false">
            <stringProp name="HTTPSampler.domain">www.youtube.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/generate_204</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.youtube.com/watch?v=LDhA_a2eRss&amp;list=PLSVkvZFafGa-pYDvclZouV7bAvwfdsE3E&amp;index=6</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-arch" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-arch</stringProp>
                  <stringProp name="Header.value">&quot;x86&quot;</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;127&quot;, &quot;Chromium&quot;;v=&quot;127&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-full-version-list" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-full-version-list</stringProp>
                  <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;99.0.0.0&quot;, &quot;Google Chrome&quot;;v=&quot;127.0.6533.120&quot;, &quot;Chromium&quot;;v=&quot;127.0.6533.120&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CI22yQEIo7bJAQipncoBCIWGywEIlKHLAQic/swBCIWgzQEIiKPOAQjWrM4BCOSvzgEI2rfOAQiYu84BGOvTzQEYua7OARicsc4BGL+T1SI=</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-form-factors" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-form-factors</stringProp>
                  <stringProp name="Header.value">&quot;Desktop&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-bitness" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-bitness</stringProp>
                  <stringProp name="Header.value">&quot;64&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-model" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-model</stringProp>
                  <stringProp name="Header.value">&quot;&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform-version" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform-version</stringProp>
                  <stringProp name="Header.value">&quot;15.0.0&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-wow64" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-wow64</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-full-version" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-full-version</stringProp>
                  <stringProp name="Header.value">&quot;127.0.6533.120&quot;</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/error_204?a=logerror&amp;t=jserror&amp;type=Error&amp;msg=Request%20failed%20due%20to%20compression&amp;line=Not%20available&amp;level=WARNING&amp;client.name=1-210" enabled="false">
            <stringProp name="HTTPSampler.domain">www.youtube.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/error_204?a=logerror&amp;t=jserror&amp;type=Error&amp;msg=Request%20failed%20due%20to%20compression&amp;line=Not%20available&amp;level=WARNING&amp;client.name=1</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">url</stringProp>
                  <stringProp name="Argument.value">https://www.youtube.com/watch?v=LDhA_a2eRss&amp;list=PLSVkvZFafGa-pYDvclZouV7bAvwfdsE3E&amp;index=6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="file" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">file</stringProp>
                  <stringProp name="Argument.value">https://www.youtube.com/watch?v=LDhA_a2eRss&amp;list=PLSVkvZFafGa-pYDvclZouV7bAvwfdsE3E&amp;index=6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="stack" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">stack</stringProp>
                  <stringProp name="Argument.value">    at new zk (https://www.youtube.com/s/desktop/4610dd25/jsbin/desktop_polymer.vflset/desktop_polymer.js:1448:61)
    at Nl.handleError (https://www.youtube.com/s/desktop/4610dd25/jsbin/desktop_polymer.vflset/desktop_polymer.js:1815:627)
    at maa.program_ (https://www.youtube.com/s/desktop/4610dd25/jsbin/desktop_polymer.vflset/desktop_polymer.js:1725:178)
    at Aa (https://www.youtube.com/s/desktop/4610dd25/jsbin/desktop_polymer.vflset/desktop_polymer.js:43:401)
    at paa.next (https://www.youtube.com/s/desktop/4610dd25/jsbin/desktop_polymer.vflset/desktop_polymer.js:45:169)
    at https://www.youtube.com/s/desktop/4610dd25/jsbin/desktop_polymer.vflset/desktop_polymer.js:52:5
    at new Promise (&lt;anonymous&gt;)
    at raa (https://www.youtube.com/s/desktop/4610dd25/jsbin/desktop_polymer.vflset/desktop_polymer.js:51:8)
    at r (https://www.youtube.com/s/desktop/4610dd25/jsbin/desktop_polymer.vflset/desktop_polymer.js:52:37)
    at b.options.onError (https://www.youtube.com/s/desktop/4610dd25/jsbin/desktop_polymer.vflset/desktop_polymer.js:1725:52)
    at https://www.youtube.com/s/desktop/4610dd25/jsbin/desktop_polymer.vflset/desktop_polymer.js:1376:339
    at https://www.youtube.com/s/desktop/4610dd25/jsbin/desktop_polymer.vflset/desktop_polymer.js:1329:63
    at XMLHttpRequest.q (https://www.youtube.com/s/desktop/4610dd25/jsbin/desktop_polymer.vflset/desktop_polymer.js:1366:196)</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="client.name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client.name</stringProp>
                  <stringProp name="Argument.value">WEB</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="client.version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client.version</stringProp>
                  <stringProp name="Argument.value">2.20240816</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="client.params.0" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">client.params.0</stringProp>
                  <stringProp name="Argument.value">/youtubei/v1/log_event?alt=json&amp;key=AIzaSyAO_FJ2SlqU8Q4STEHLGCilw_Y9_11qcW8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="client.params.1" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client.params.1</stringProp>
                  <stringProp name="Argument.value">400</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="client.device.vendor" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">client.device.vendor</stringProp>
                  <stringProp name="Argument.value">Google Inc.</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="client.params.errorServiceSignature" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">client.params.errorServiceSignature</stringProp>
                  <stringProp name="Argument.value">msg=70&amp;cb=12</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="client.params.serviceWorker" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client.params.serviceWorker</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="client.params.fscripts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client.params.fscripts</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server.name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server.name</stringProp>
                  <stringProp name="Argument.value">WebFE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server.version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server.version</stringProp>
                  <stringProp name="Argument.value">prod</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="session_token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">session_token</stringProp>
                  <stringProp name="Argument.value">QUFFLUhqbmZiN3ZFMjBoV2ZTVEhleFZTSzlaQzRiX3cyQXxBQ3Jtc0ttaVFFRjVUN2Rscldxa1FuQWk0ZlA3TE5vbXRkbGdlTHFNRFdlWGJXRmFGcm9kX0JRanFhc0N2UzVnWFNQS1dPamRCZGZYQjNZMVI0VzlvTjJRNWNCcGhWNGZaMFI2M0IyNHBBcU1nVXp1aDlpUVktYw==</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-YouTube-Client-Version" elementType="Header">
                  <stringProp name="Header.name">X-YouTube-Client-Version</stringProp>
                  <stringProp name="Header.value">2.20240816.01.00</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.youtube.com/watch?v=LDhA_a2eRss&amp;list=PLSVkvZFafGa-pYDvclZouV7bAvwfdsE3E&amp;index=6</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="X-Youtube-Identity-Token" elementType="Header">
                  <stringProp name="Header.name">X-Youtube-Identity-Token</stringProp>
                  <stringProp name="Header.value">QUFFLUhqbUpGbEkwc04tNEZJNmZjbDBxeVNGUHlEN05YZ3w=</stringProp>
                </elementProp>
                <elementProp name="X-Goog-Visitor-Id" elementType="Header">
                  <stringProp name="Header.name">X-Goog-Visitor-Id</stringProp>
                  <stringProp name="Header.value">CgtsR255U0ZfbmdNNCjwypK2BjIKCgJJThIEGgAgbQ%3D%3D</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.youtube.com</stringProp>
                </elementProp>
                <elementProp name="X-YouTube-Device" elementType="Header">
                  <stringProp name="Header.name">X-YouTube-Device</stringProp>
                  <stringProp name="Header.value">cbr=Chrome&amp;cbrver=127.0.0.0&amp;ceng=WebKit&amp;cengver=537.36&amp;cos=Windows&amp;cosver=10.0&amp;cplatform=DESKTOP</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-full-version-list" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-full-version-list</stringProp>
                  <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;99.0.0.0&quot;, &quot;Google Chrome&quot;;v=&quot;127.0.6533.120&quot;, &quot;Chromium&quot;;v=&quot;127.0.6533.120&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CI22yQEIo7bJAQipncoBCIWGywEIlKHLAQic/swBCIWgzQEIiKPOAQjWrM4BCOSvzgEI2rfOAQiYu84BGOvTzQEYua7OARicsc4BGL+T1SI=</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-form-factors" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-form-factors</stringProp>
                  <stringProp name="Header.value">&quot;Desktop&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="X-YouTube-Utc-Offset" elementType="Header">
                  <stringProp name="Header.name">X-YouTube-Utc-Offset</stringProp>
                  <stringProp name="Header.value">330</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform-version" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform-version</stringProp>
                  <stringProp name="Header.value">&quot;15.0.0&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-full-version" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-full-version</stringProp>
                  <stringProp name="Header.value">&quot;127.0.6533.120&quot;</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-arch" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-arch</stringProp>
                  <stringProp name="Header.value">&quot;x86&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-YouTube-Time-Zone" elementType="Header">
                  <stringProp name="Header.name">X-YouTube-Time-Zone</stringProp>
                  <stringProp name="Header.value">Asia/Calcutta</stringProp>
                </elementProp>
                <elementProp name="X-YouTube-Client-Name" elementType="Header">
                  <stringProp name="Header.name">X-YouTube-Client-Name</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="X-YouTube-Page-Label" elementType="Header">
                  <stringProp name="Header.name">X-YouTube-Page-Label</stringProp>
                  <stringProp name="Header.value">youtube.desktop.web_20240816_01_RC00</stringProp>
                </elementProp>
                <elementProp name="X-YouTube-Ad-Signals" elementType="Header">
                  <stringProp name="Header.name">X-YouTube-Ad-Signals</stringProp>
                  <stringProp name="Header.value">dt=1724163440890&amp;flash=0&amp;frm&amp;u_tz=330&amp;u_his=11&amp;u_h=864&amp;u_w=1536&amp;u_ah=816&amp;u_aw=1536&amp;u_cd=24&amp;bc=31&amp;bih=730&amp;biw=1519&amp;brdim=0%2C0%2C0%2C0%2C1536%2C0%2C1536%2C816%2C1536%2C730&amp;vis=2&amp;wgl=true&amp;ca_type=image&amp;bid=ANyPxKr-pFefm1w6qii7Q4faznNn4Ugx12_s62VIzqb4JzL3Q-a_cb9tN1nX_M7cnYDoNAJIlDC7FO27esrsbCM7ERmyNUqcNg</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;127&quot;, &quot;Chromium&quot;;v=&quot;127&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Goog-AuthUser" elementType="Header">
                  <stringProp name="Header.name">X-Goog-AuthUser</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-bitness" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-bitness</stringProp>
                  <stringProp name="Header.value">&quot;64&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-model" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-model</stringProp>
                  <stringProp name="Header.value">&quot;&quot;</stringProp>
                </elementProp>
                <elementProp name="X-YouTube-Page-CL" elementType="Header">
                  <stringProp name="Header.name">X-YouTube-Page-CL</stringProp>
                  <stringProp name="Header.value">663631070</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-wow64" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-wow64</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/chrome-sync/command/?client=Google+Chrome&amp;client_id=gicMILyst77Y%2BdNlTJVphA%3D%3D-212" enabled="false">
            <stringProp name="HTTPSampler.domain">clients4.google.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/chrome-sync/command/?client=Google+Chrome&amp;client_id=gicMILyst77Y%2BdNlTJVphA%3D%3D</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;͘yp&#x1b;�&#x1d;�w����tH=e���8&amp;Qb����jW�&#x12;K��$K�u�P��o/I�.K�,)N��B��&#x1c;�LhK�&#x1;&#xd;&#x10;(!M�MzAKH��&#xc;���&#x2;&#x1d;���I&#xb;�-�҆iG�q���Pp;�&#x1f;����������x��&#x8;&#x13;�\T�Y��&quot;	&#x18;�7���R�&#x16;��&#x16;��6���e(�� ဠ&#x0;&#xe;XV��&#xc;8�$�&quot;dDFbH�&#x1e;1�{�؃{)b��\&#x1b;OEbɡ��I&#x84;&lt;&#x2;�h,&#x1b;�&#x7;��P�0j&#x18;��&#xd;��O_6�F7=���&#x7;��~��&#x1f;&gt;w&#x12;�)P2&#x11;�V��Kd� ����&#xc;O�(�	�E�&#x7;E�3�&#x12;�&#x13;&#x14;��@�&#x0;&#xe;&#x1; p��I��B&#x11;�&#x1e;1�x�{e}�_��l,����w٘���&#x1f;��I}���{�ɺ�&#x1c;�^r&#xe;$�F����&#x13;ŬE��N�������5\&#x1c;L¤��u��鸿!&#x1b;&#x5;J�P�e::���=/$!ȷG�&gt;&#x7f;Q&#x16;����5&#x6;��&#xe;���5��Ʈ(���L��&#x2;i�&amp;\]�|��&#x14;&#x10;�M��Ţ?��G_~��;��{&#xf;&lt;]~Г�&#x1f;,?(f�8��fk@}��KN����%��HL�8��l�d�i���AWg:j�X���aG��M�t��ݷik&#x11;}�&#x1;�&#x10;�~��&gt;�˥�f�qxx�Q�&#x13;)!&#xe;Kr�m1�0�k��&#x12;�&#x15;��&#x18;&#x15;KJrA&#x1d;Vw] ���&#x10;Hӱ*�&#x3;G&#x1f;~p/Ձt#}H�S&apos;v��&#x1d;Eo�}&quot;&#x5;�cb*�&#x18;&#x13;S��3�&#x19;&#x14;}&#x11;&#x558;{�R8��2��3&#x1f;������rL|��&#x12;�&#xf;)�8��e%�Q�&#xc;Z�&quot;:�&#x7;��P�&#x7;X�sU��ǏM���}��/&#x7f;e&#x1e;T�=8���q���&#x15;sz������Ӝ�����*רr:�֬���t&amp;%�ko�I�^&#xb;_��SU��?�D�O��q�f&gt;��4,\hŖ��r|폗(}��k�����5+&#x16;&#x10;��*�}Z�*��=OO�&#x1c;;{�ޫs4��&#x7f;��r��o8���&#xf;xB�P���N�&#x4;����vw�8�w&#x1;��C����D��&#x4;�C�&#x13;q�*&lt;&#xe;EB�&#x1;Gӂ(𤉒���&#x1a;;�&#xf;O?U�w��2&#x1b;�&#x10;:j�|&#x1d;&#x1d;}��s(���N�WN&#x1;5��K&#x1a;�k�z�ia�Q=R�ð�H-�G&#xd;�&#x1;!&#x10;nϏ߸�	u�&#x19;�C;�SK�M�D�3�A�g�&#x12;�&#x15;E&#x16;&#xd;
�~&#x14;ُ&quot;���S�&#x1d;�&#x1f;��I�&amp;W!D�&#x5;&amp;-zsƆ���@F&amp;�%.1���&#xe;ju�4C���&#x4;8��&#x0;&#x7;&#x1c;E�Pf$�&#x6;�(&#x1;&#x13;�(��G&#xc;ǾZ~�����&#x16;�����&#x15;��wh��o�`&apos;&#xe;�v���&#x7;����&#xb;Mx�����#&#x6;�0:^M��WsO���&#xb;`�$�T����&#x5;�&#x1d;W��Q�}�&lt;�.���&#xe;��@d�ɠ��CI�����!�&#x1;@q&#x0;�!���dbq�&#x10;&#x14;��&#x15;H�&lt;C(&#x2;�G&#xc;;�,Cܧ�E��* �L&#xe;*�1���&#x1a;l*��A��v�WW��gŅp;�}C3�֔�+Ъ0X�&#x1e;W ��2�P�kLۭD0`&#x1d;���!ʖ��XtG��z&#x0;)&#x13;)*&#xc;Έ��&#x3;&#x11;(�@B�C(�� &#x13;�$��ٯ�dK�R���&#x17;&#x1;�ddݣ�ڮ��&#xd;
�&#x1c;��خ��ʪ߬�v�Ws�����Ȧ���&#x2;,PJ)&#x11;{�&#xb;Ƹ��Pg���Fm��Ddz,�CZ]=��,`��&#x13;�&#x2;q�&#x8;&quot;.0P�E��Y&#x13;	&#x8;J)o-F�Q+�Gj!Z�&#xd;
t1��Z�9P1�h�&#x15;Ȁ^F�.5�������*����&#xb;P�LP��&#x12;&#x1a;&#xc;y��I��!I�wH&#x5;&quot;�Н��բ{��	�BJ&#x2;�p�0,&#xe;h��&#x5; �8�&#x5;��DB��	�R[X�Z�&#x16;�\mWIm�`�w�&lt;:o��g&#x11;����p:�&#xf;���&#x15;lu�=�p&#x9b;�&lt;&#xe;V&amp;&quot;���&#x6;Z�&#x4;�l*&#x4;�&#xb;&#x14;ɕ�G.�&#x13;/��SX����&#x3;�aLj���&amp;��w&#x16;��8��_��&quot;P&#x1a;&#x1d;����f�ڃ$H�\g�e,�&#x14;�&#x10;&#x18;vf���&#x7f;&#x0;t�E��P&#x12;8��)(�³8`&#x18;&#x1e;�&#x14;��&#x19;J$&#x1;&#x10;HZ�H=b�W�&amp;���.~(M�-焴c&#x11; �3^͝~�噕�&#x1a;�$�d�&#xd;
&#x11;g&#x10;���t&#x3;��꼵�-��]��Ew��KH&#xc;#p&quot;�i&#x0;d&#x1c;0&amp;&#x1a;�(B�!ű&#xc;&#xf;D�7����`��K���&#x14;�uWA����rFS��9&#x18;Q�����K�Hh�Z��&#x19;p�&#x16;�B�0��i&#x16;N��~�&#xd;
�b�5�&quot;b��mS�&#x1d;&#x11;�dH�U&#x6;\=�&#x1e;����L�ݹM��pH�&#x1d;}G����Z��	&#x14;{�\&#xd;vv�g�&#x13;&#x7;�ؿ��`&#x13;&#x13;&#x1a;�����۵؟?�`&#x7f;z�&#xd;
���u��=K�&apos;��o~&#x7f;	�ƅ%�}c��&#xe;��&#x5;�݉�؅���/�cg�Vc&#x7;&#x7f;r&#xb;���&#x19;&#x1b;ݽ&#x1;��a&#xb;��K,v�&#x16;�ߵ`�&gt;Д=^s?���`&#x1c;ښ�i���a�I�&#x11;&#xd;)�O��4;��ݾޞ�=���^1�Zo�P\$�rY�!g�c/9�x��i&#x13;ݭ�A&#xd;
&#x10;�f�+�&#xc;&#x11;���|)&#x1b;�-tv{Zy�O���L����3I����!&gt;��҃I7�2�`8̤�B[B&#x8;qm�����&amp;&#x10;�+�	��jZZ�&#x1a;z�/��&#x11;t�\�&#x15;���^���H���+C�(oo���&#x11;&#x13;&#x1b;&#x1d;m^��k��A�&#x16;{�挜7&#x4;�m&#x1e;Ú��&#x17;7y��Rx�f��adC߆U�5&#x90;UX����&#x19;W��T�m��k���|i���7Լ�*�$5��}9[ko[��hʄK��,�&#xd;0�i��8�&#x16;R��&#x1b;V�7eݩ��t��&#x10;[�{�&#x1c;k��Jz�n}oBa&#x1d;&#x1;�&#x7bd;&#x5;�ץ�G֮_���X;���a���Rܳ��`oZ&#x19;3,��`&#xd;&#x6;�|ac)m&#x1c;I�X��fK����U�KD�C��=���@�x��z`I&#x13;K�@����&gt;U�������۵&#x17;��W���qH&#x13;��,E������wk0�c3�?�^&lt;.T��#?���k�����3c��h�/��6T���-�h&amp;���]�v=I�&#x1a;�F���F�&quot;�&#x6;�!&#x15;�&apos;Y&#x19;@&#x12;��I�L�&quot;Ѵ�	�@&#x1;�a &#x14;I(�&#x19;Y�&#x1a;�&#xc;L�Q&lt;*C)k,OҴy&#x5;E&#x10;Ė�z1&#xd;
�I9n��&#x10;�W�&#x12;)�҆�&quot;�&#x16;VY�%&#x18;(ڼ�&#x18;Hxp��w5&apos;��~�\l	Q�7m�&#x1e;�E��5K��&#x2;�ntU�&#x1a;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Content-Encoding" elementType="Header">
                  <stringProp name="Header.name">Content-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ya29.a0AcM612yNLSS6ugx8oU2u9TitbxDswz3q9WKi4tCww-OZxeMb9qRhZ-q6PNMGQej1KmHE-uwCu5Ek356RB6Jv78MClt3hPoqHdGbeEsWRgSrdqxf-7ZIbPs5fNC5ilLF93TQYX6v4pejW6zZCc8t7_aaDjkJEUF7shWmD-c1aYZRwNMdY38qIlD1neUWguwmghXatysK2Q_6A0Yt8rzRJq_EXIdUrHInl0JqPGkCOjkkW1d3u9VoWUH1y2wZrPUdGg4hf1708xKwx7qNfyQaCgYKAeESARMSFQHGX2MipUVCEhIuZubh4dokh4WUwg0281</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CI22yQEIo7bJAQipncoBCIWGywEIlKHLAQic/swBCIWgzQEIiKPOAQjWrM4BCOSvzgEI2rfOAQiYu84BGOvTzQEYua7OARicsc4BGL+T1SI=</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/octet-stream</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Chrome WIN 127.0.6533.120 (c51f2916e4a14157c276fd33c8bfb24155aac1ad-refs/branch-heads/6533@{#2000}) channel(stable)</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/owa/service.svc?action=GetReminders&amp;UA=0&amp;app=Mail&amp;n=254-213" enabled="false">
            <stringProp name="HTTPSampler.domain">outlook.office.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/owa/service.svc?action=GetReminders&amp;UA=0&amp;app=Mail&amp;n=254</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="prefer" elementType="Header">
                  <stringProp name="Header.name">prefer</stringProp>
                  <stringProp name="Header.value">exchange.behavior=&quot;IncludeThirdPartyOnlineMeetingProviders&quot;</stringProp>
                </elementProp>
                <elementProp name="x-owa-canary" elementType="Header">
                  <stringProp name="Header.name">x-owa-canary</stringProp>
                  <stringProp name="Header.value">bdvoV34nXz0AAAAAAAAAAFA1iFexwdwYqT-EgAAEC9TWe47bPsyvuM-sSYtOk_qs08GtXsq2QC8.</stringProp>
                </elementProp>
                <elementProp name="x-req-source" elementType="Header">
                  <stringProp name="Header.name">x-req-source</stringProp>
                  <stringProp name="Header.value">Mail</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://outlook.office.com</stringProp>
                </elementProp>
                <elementProp name="x-owa-correlationid" elementType="Header">
                  <stringProp name="Header.name">x-owa-correlationid</stringProp>
                  <stringProp name="Header.value">69455480-c4eb-1c3e-5546-f5b5261759c3</stringProp>
                </elementProp>
                <elementProp name="x-owa-sessionid" elementType="Header">
                  <stringProp name="Header.name">x-owa-sessionid</stringProp>
                  <stringProp name="Header.value">a281d409-6286-4d29-af2e-da97e6eee094</stringProp>
                </elementProp>
                <elementProp name="x-owa-urlpostdata" elementType="Header">
                  <stringProp name="Header.name">x-owa-urlpostdata</stringProp>
                  <stringProp name="Header.value">%7B%22__type%22%3A%22GetRemindersJsonRequest%3A%23Exchange%22%2C%22Header%22%3A%7B%22__type%22%3A%22JsonRequestHeaders%3A%23Exchange%22%2C%22RequestServerVersion%22%3A%22V2018_01_08%22%2C%22TimeZoneContext%22%3A%7B%22__type%22%3A%22TimeZoneContext%3A%23Exchange%22%2C%22TimeZoneDefinition%22%3A%7B%22__type%22%3A%22TimeZoneDefinitionType%3A%23Exchange%22%2C%22Id%22%3A%22India%20Standard%20Time%22%7D%7D%7D%2C%22Body%22%3A%7B%22__type%22%3A%22GetRemindersRequest%3A%23Exchange%22%2C%22BeginTime%22%3A%222024-08-21T07%3A03%3A57.149Z%22%2C%22EndTime%22%3A%222024-08-21T09%3A18%3A57.149Z%22%2C%22ReminderType%22%3A1%7D%7D</stringProp>
                </elementProp>
                <elementProp name="ms-cv" elementType="Header">
                  <stringProp name="Header.name">ms-cv</stringProp>
                  <stringProp name="Header.value">oBU2fmygtwml6np0FuoWMG.271</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="x-owa-hosted-ux" elementType="Header">
                  <stringProp name="Header.name">x-owa-hosted-ux</stringProp>
                  <stringProp name="Header.value">false</stringProp>
                </elementProp>
                <elementProp name="action" elementType="Header">
                  <stringProp name="Header.name">action</stringProp>
                  <stringProp name="Header.value">GetReminders</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;127&quot;, &quot;Chromium&quot;;v=&quot;127&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/youtubei/v1/log_event?alt=json&amp;key=AIzaSyAO_FJ2SlqU8Q4STEHLGCilw_Y9_11qcW8-214" enabled="false">
            <stringProp name="HTTPSampler.domain">www.youtube.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/youtubei/v1/log_event?alt=json&amp;key=AIzaSyAO_FJ2SlqU8Q4STEHLGCilw_Y9_11qcW8</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;context&quot;:{&quot;client&quot;:{&quot;hl&quot;:&quot;en&quot;,&quot;gl&quot;:&quot;IN&quot;,&quot;clientName&quot;:1,&quot;clientVersion&quot;:&quot;2.20240816.01.00&quot;,&quot;configInfo&quot;:{&quot;appInstallData&quot;:&quot;CPDKkrYGEJKusQUQ-KuxBRDi1K4FEJSJsQUQ6sOvBRCOtLEFEI2UsQUQ65mxBRCmmrAFEMzfrgUQt-r-EhCWlbAFEP-IsQUQ9KuwBRDW3bAFEN_1sAUQ0rCxBRDbr68FEKaTsQUQi7SxBRDZya8FELvYsAUQxaSxBRCDuf8SENWIsAUQ2aixBRDJ5rAFEKKdsQUQiIewBRCx3LAFEKrYsAUQ4sT_EhDJ968FEJT-sAUQjcywBRDj0bAFEISFrwUQppKxBRC9tq4FEOvo_hIQ782wBRDrk64FEJmYsQUQxMX_EhDd6P4SEKXC_hIQ1-mvBRCrqbEFEO-IsQUQ9quwBRDEkrEFEOzD_xIQvYqwBRCa8K8FEJDGsAUQqJqwBRCFtLEFEPyFsAUQlqOxBRDxnLAFELfvrwUQirCxBRDN17AFEOyosQUQ5fSwBRDQjbAFEOHssAUQieiuBRCigbAFENPhrwUQnaawBRDXorEFEMnXsAUQiOOvBRDuoq8FEJ3QsAUQsO6wBRCokrEFEL2ZsAUQm7WxBRDdv_8SKhxDQU1TRHhVTW9MMndETkhrQnZQdDhRc2RCdz09&quot;,&quot;coldConfigData&quot;:&quot;CPDKkrYGGjJBT2pGb3gwV3FPZFVJSkhmR2hhZHBZRlZXaFFaTnE2dGZFMnI1c0V4Ui1GbDByZXJ3dyIyQU9qRm94M1ZMT0VTWU5wRW00Y0JQQlF6VFFYcEF6Wm5MeFNmVm9oZDQ4UVBEaUpTY0E%3D&quot;,&quot;coldHashData&quot;:&quot;CPydlrYGEhQxMzgwNzQ5NjY0MDMyNTAwODMwMxjn75W2BjIyQU9qRm94MFdxT2RVSUpIZkdoYWRwWUZWV2hRWk5xNnRmRTJyNXNFeFItRmwwcmVyd3c6MkFPakZveDNWTE9FU1lOcEVtNGNCUEJRelRRWHBBelpuTHhTZlZvaGQ0OFFQRGlKU2NBQjRDQU1TSXcwSm9zaTNBcDRNM2hUT0RaY2YweVlWRnBteHR4X1ZyZ2FvZnBxN0J2OVo3NkFE&quot;,&quot;hotHashData&quot;:&quot;CPydlrYGEhMzOTU0NTQ1Nzk5ODkzMDM3NDIwGPyOlrYGKJTk_BIopdD9EijZmf4SKMjK_hIor8z-Eijd6P4SKLfq_hIov_f-EijBg_8SKLCS_xIotKP_EijRrv8SKMmv_xIo_7X_Eii_uf8SKL27_xIo07z_Eijdv_8SKJ7B_xIopcH_Eiifw_8SKOzD_xIo4sT_EijoxP8SKKLF_xIoxMX_EjIyQU9qRm94MFdxT2RVSUpIZkdoYWRwWUZWV2hRWk5xNnRmRTJyNXNFeFItRmwwcmVyd3c6MkFPakZveDNWTE9FU1lOcEVtNGNCUEJRelRRWHBBelpuTHhTZlZvaGQ0OFFQRGlKU2NBQixDQU1TSFEwTW90ZjZGYjRfNklvR3BDQVZDZDNQd2d5b213S1dnLUlMdk9JQQ%3D%3D&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36&quot;,&quot;screenDensityFloat&quot;:&quot;1.25&quot;,&quot;mainAppWebInfo&quot;:{&quot;webDisplayMode&quot;:&quot;WEB_DISPLAY_MODE_BROWSER&quot;},&quot;memoryTotalKbytes&quot;:&quot;8000000&quot;,&quot;connectionType&quot;:&quot;CONN_CELLULAR_3G&quot;,&quot;browserName&quot;:&quot;Chrome&quot;,&quot;browserVersion&quot;:&quot;127.0.0.0&quot;,&quot;osName&quot;:&quot;Windows&quot;,&quot;osVersion&quot;:&quot;10.0&quot;,&quot;platform&quot;:&quot;DESKTOP&quot;}},&quot;events&quot;:[{&quot;eventTimeMs&quot;:1724224579096,&quot;sliEventBatch&quot;:{&quot;loggedEvents&quot;:[{&quot;dimensions&quot;:{&quot;mainAppWeb&quot;:{&quot;isShellLoad&quot;:false},&quot;csn&quot;:&quot;UBoFUV7zftglsu6c&quot;},&quot;records&quot;:[{&quot;name&quot;:&quot;SLI_NAME_YOUTUBE_WEB_NETWORK_REQUEST&quot;,&quot;state&quot;:&quot;SLI_STATE_START&quot;,&quot;sliId&quot;:&quot;HV5bQxAb&quot;},{&quot;name&quot;:&quot;SLI_NAME_YOUTUBE_WEB_NETWORK_REQUEST&quot;,&quot;status&quot;:&quot;SLI_STATUS_SUCCESS&quot;,&quot;state&quot;:&quot;SLI_STATE_END&quot;,&quot;sliId&quot;:&quot;HV5bQxAb&quot;}]}],&quot;unloggedEvents&quot;:[]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;6508334&quot;}},{&quot;eventTimeMs&quot;:1724224609311,&quot;clientError&quot;:{&quot;errorMetadata&quot;:{&quot;pageUrl&quot;:&quot;https://www.youtube.com/watch?v=LDhA_a2eRss&amp;list=PLSVkvZFafGa-pYDvclZouV7bAvwfdsE3E&amp;index=6&quot;,&quot;kvPairs&quot;:[{&quot;key&quot;:&quot;client.version&quot;,&quot;value&quot;:&quot;2.20240816&quot;},{&quot;key&quot;:&quot;client.name&quot;,&quot;value&quot;:&quot;WEB&quot;},{&quot;key&quot;:&quot;client.name&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;key&quot;:&quot;client.version&quot;,&quot;value&quot;:&quot;2.20240816.01.00&quot;},{&quot;key&quot;:&quot;client.device.vendor&quot;,&quot;value&quot;:&quot;Google Inc.&quot;},{&quot;key&quot;:&quot;client.params.errorServiceSignature&quot;,&quot;value&quot;:&quot;msg=70&amp;cb=12&quot;},{&quot;key&quot;:&quot;client.params.serviceWorker&quot;,&quot;value&quot;:&quot;false&quot;},{&quot;key&quot;:&quot;client.params.fscripts&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;key&quot;:&quot;server.name&quot;,&quot;value&quot;:&quot;WebFE&quot;},{&quot;key&quot;:&quot;server.version&quot;,&quot;value&quot;:&quot;prod&quot;}],&quot;experimentIds&quot;:[23986025,24004644,24208765,24439361,24499532,24550458,24566687,24699899,39325854,51010235,51017346,51041512,51053689,51063643,51064835,51072748,51091058,51095478,51098297,51098299,51101169,51116067,51145218,51147415,51157411,51157430,51157432,51158514,51165467,51176511,51177013,51178982,51184990,51186528,51204329,51217102,51217274,51217474,51225977,51227881,51228350,51228352,51228695,51230478,51231814,51236020,51237842,51241028,51243940,51249768,51250706,51251508,51251837,51251850,51256084,51257665,51257853,51258456,51264030,51268553,51269541,51270085,51271023,51271669]},&quot;stackTrace&quot;:{&quot;isObfuscated&quot;:true,&quot;browserStackInfo&quot;:{&quot;stackTrace&quot;:&quot;    at maa.program_ (https://www.youtube.com/s/desktop/4610dd25/jsbin/desktop_polymer.vflset/desktop_polymer.js:10971:100)\n    at Aa (https://www.youtube.com/s/desktop/4610dd25/jsbin/desktop_polymer.vflset/desktop_polymer.js:43:401)\n    at paa.next (https://www.youtube.com/s/desktop/4610dd25/jsbin/desktop_polymer.vflset/desktop_polymer.js:45:169)\n    at https://www.youtube.com/s/desktop/4610dd25/jsbin/desktop_polymer.vflset/desktop_polymer.js:52:5\n    at new Promise (&lt;anonymous&gt;)\n    at raa (https://www.youtube.com/s/desktop/4610dd25/jsbin/desktop_polymer.vflset/desktop_polymer.js:51:8)\n    at r (https://www.youtube.com/s/desktop/4610dd25/jsbin/desktop_polymer.vflset/desktop_polymer.js:52:37)\n    at IDb.fetch (https://www.youtube.com/s/desktop/4610dd25/jsbin/desktop_polymer.vflset/desktop_polymer.js:10971:57)\n    at Gc (https://www.youtube.com/s/desktop/4610dd25/jsbin/desktop_polymer.vflset/desktop_polymer.js:6523:422)\n    at wab (https://www.youtube.com/s/desktop/4610dd25/jsbin/desktop_polymer.vflset/desktop_polymer.js:10118:14)\n    at maa.program_ (https://www.youtube.com/s/desktop/4610dd25/jsbin/desktop_polymer.vflset/desktop_polymer.js:6523:472)\n    at Aa (https://www.youtube.com/s/desktop/4610dd25/jsbin/desktop_polymer.vflset/desktop_polymer.js:43:401)\n    at paa.next (https://www.youtube.com/s/desktop/4610dd25/jsbin/desktop_polymer.vflset/desktop_polymer.js:45:169)\n    at b (https://www.youtube.com/s/desktop/4610dd25/jsbin/desktop_polymer.vflset/desktop_polymer.js:49:85)&quot;,&quot;filename&quot;:&quot;https://www.youtube.com/watch?v=LDhA_a2eRss&amp;list=PLSVkvZFafGa-pYDvclZouV7bAvwfdsE3E&amp;index=6&quot;}},&quot;logMessage&quot;:{&quot;level&quot;:&quot;ERROR_LEVEL_WARNNING&quot;,&quot;message&quot;:&quot;Failed to fetch&quot;,&quot;errorClassName&quot;:&quot;TypeError&quot;,&quot;sampleWeight&quot;:500}},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;6538564&quot;}},{&quot;eventTimeMs&quot;:1724224638066,&quot;sliEventBatch&quot;:{&quot;loggedEvents&quot;:[{&quot;dimensions&quot;:{&quot;mainAppWeb&quot;:{&quot;isShellLoad&quot;:false},&quot;csn&quot;:&quot;UBoFUV7zftglsu6c&quot;},&quot;records&quot;:[{&quot;name&quot;:&quot;SLI_NAME_YOUTUBE_WEB_NETWORK_REQUEST&quot;,&quot;state&quot;:&quot;SLI_STATE_START&quot;,&quot;sliId&quot;:&quot;E9wj7ZA3&quot;}]}],&quot;unloggedEvents&quot;:[]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;6567318&quot;}}],&quot;serializedClientEventId&quot;:{&quot;serializedEventId&quot;:&quot;cKXEZr2lK9S93LUPm8yR-AE&quot;,&quot;clientCounter&quot;:&quot;27377&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-YouTube-Client-Version" elementType="Header">
                  <stringProp name="Header.name">X-YouTube-Client-Version</stringProp>
                  <stringProp name="Header.value">2.20240816.01.00</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.youtube.com/watch?v=LDhA_a2eRss&amp;list=PLSVkvZFafGa-pYDvclZouV7bAvwfdsE3E&amp;index=6</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="X-Youtube-Identity-Token" elementType="Header">
                  <stringProp name="Header.name">X-Youtube-Identity-Token</stringProp>
                  <stringProp name="Header.value">QUFFLUhqbUpGbEkwc04tNEZJNmZjbDBxeVNGUHlEN05YZ3w=</stringProp>
                </elementProp>
                <elementProp name="X-Goog-Visitor-Id" elementType="Header">
                  <stringProp name="Header.name">X-Goog-Visitor-Id</stringProp>
                  <stringProp name="Header.value">CgtsR255U0ZfbmdNNCjwypK2BjIKCgJJThIEGgAgbQ%3D%3D</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.youtube.com</stringProp>
                </elementProp>
                <elementProp name="X-Goog-Request-Time" elementType="Header">
                  <stringProp name="Header.name">X-Goog-Request-Time</stringProp>
                  <stringProp name="Header.value">1724224741060</stringProp>
                </elementProp>
                <elementProp name="X-YouTube-Device" elementType="Header">
                  <stringProp name="Header.name">X-YouTube-Device</stringProp>
                  <stringProp name="Header.value">cbr=Chrome&amp;cbrver=127.0.0.0&amp;ceng=WebKit&amp;cengver=537.36&amp;cos=Windows&amp;cosver=10.0&amp;cplatform=DESKTOP</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-full-version-list" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-full-version-list</stringProp>
                  <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;99.0.0.0&quot;, &quot;Google Chrome&quot;;v=&quot;127.0.6533.120&quot;, &quot;Chromium&quot;;v=&quot;127.0.6533.120&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CI22yQEIo7bJAQipncoBCIWGywEIlKHLAQic/swBCIWgzQEIiKPOAQjWrM4BCOSvzgEI2rfOAQiYu84BGOvTzQEYua7OARicsc4BGL+T1SI=</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-form-factors" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-form-factors</stringProp>
                  <stringProp name="Header.value">&quot;Desktop&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-YouTube-Utc-Offset" elementType="Header">
                  <stringProp name="Header.name">X-YouTube-Utc-Offset</stringProp>
                  <stringProp name="Header.value">330</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform-version" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform-version</stringProp>
                  <stringProp name="Header.value">&quot;15.0.0&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-full-version" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-full-version</stringProp>
                  <stringProp name="Header.value">&quot;127.0.6533.120&quot;</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-arch" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-arch</stringProp>
                  <stringProp name="Header.value">&quot;x86&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-Goog-Event-Time" elementType="Header">
                  <stringProp name="Header.name">X-Goog-Event-Time</stringProp>
                  <stringProp name="Header.value">1724224728160</stringProp>
                </elementProp>
                <elementProp name="X-YouTube-Time-Zone" elementType="Header">
                  <stringProp name="Header.name">X-YouTube-Time-Zone</stringProp>
                  <stringProp name="Header.value">Asia/Calcutta</stringProp>
                </elementProp>
                <elementProp name="X-YouTube-Client-Name" elementType="Header">
                  <stringProp name="Header.name">X-YouTube-Client-Name</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="X-YouTube-Page-Label" elementType="Header">
                  <stringProp name="Header.name">X-YouTube-Page-Label</stringProp>
                  <stringProp name="Header.value">youtube.desktop.web_20240816_01_RC00</stringProp>
                </elementProp>
                <elementProp name="X-YouTube-Ad-Signals" elementType="Header">
                  <stringProp name="Header.name">X-YouTube-Ad-Signals</stringProp>
                  <stringProp name="Header.value">dt=1724163440890&amp;flash=0&amp;frm&amp;u_tz=330&amp;u_his=11&amp;u_h=864&amp;u_w=1536&amp;u_ah=816&amp;u_aw=1536&amp;u_cd=24&amp;bc=31&amp;bih=730&amp;biw=1519&amp;brdim=0%2C0%2C0%2C0%2C1536%2C0%2C1536%2C816%2C1536%2C730&amp;vis=2&amp;wgl=true&amp;ca_type=image&amp;bid=ANyPxKr-pFefm1w6qii7Q4faznNn4Ugx12_s62VIzqb4JzL3Q-a_cb9tN1nX_M7cnYDoNAJIlDC7FO27esrsbCM7ERmyNUqcNg</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;127&quot;, &quot;Chromium&quot;;v=&quot;127&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Goog-AuthUser" elementType="Header">
                  <stringProp name="Header.name">X-Goog-AuthUser</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-bitness" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-bitness</stringProp>
                  <stringProp name="Header.value">&quot;64&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Origin" elementType="Header">
                  <stringProp name="Header.name">X-Origin</stringProp>
                  <stringProp name="Header.value">https://www.youtube.com</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-model" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-model</stringProp>
                  <stringProp name="Header.value">&quot;&quot;</stringProp>
                </elementProp>
                <elementProp name="X-YouTube-Page-CL" elementType="Header">
                  <stringProp name="Header.name">X-YouTube-Page-CL</stringProp>
                  <stringProp name="Header.value">663631070</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-wow64" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-wow64</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/deletecart-215" enabled="false">
            <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/deletecart</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">content-type</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/deletecart-216">
            <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/deletecart</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;cookie&quot;:&quot;abhishek1!&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;127&quot;, &quot;Chromium&quot;;v=&quot;127&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/OneCollector/1.0/-217" enabled="false">
            <stringProp name="HTTPSampler.domain">mobile.events.data.microsoft.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/OneCollector/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">�}�d�y&#x1f;6�$�ZQ�J����2�ʶd���=��N����R\�+һ��6A�wf��ܗ�μ��w?&#x4;&#x4;`� �&#x3;�&#x15;���&#xb;&#x4;u�Gc���&#x8;P�i���&#x1f;���@&#x10;&apos;@&#x1d;7q��u�&#x4;u�&#xf;�����;���;���ز�.)q��{����|���&lt;�9�&#x7f;�:N���K�y9-n&#x7b8;��&#x17;��&#x1f;/&#x14;�j��Q�v�f}c�o�����&#x1b;o�����?�O&#x7f;�7?�g6���+k��BL�4�s?���,��E���o?�g&#x1e;}��&#x17;&#x1e;*&#x1f;~��~򅗟~1?�oΞ&#x16;fw4&#x7f;�ܹsg��S&#x17;&#x1e;&#x1a;���&#xb;&#xf;]���ئ��Q.;��lz���G���#�R%D&gt;�����&#x13;��������r�{&#x1d;�������~��}���F&quot;���XJ+ű8�OgVϷ�񺼹-VE�+�,5�=&#x12;Ҥ��?q�o|�kW���K�/&#x7f;�����y�&amp;R��7&#x1f;m&#x1e;���&#x1;t����O�}�-f����~}���&#x1e;���&gt;��+_y���ѥ/|��˛#u�E�n\�����M�&#x15;&#x7f;�&lt;��S����dңK�z�ҕ�r��sW��&#x13;��?�I{�&#xb;�&#x19;+��&#x7;1E����?=��7�Ǜj�V�&quot;�&#x7bd;�^�|��������&#x7f;�]x�����m��.��&gt;�پ&gt;z�5W&#x5fb;}�Z�r��HGo�w�(+���&#x16;�{_�lg��X~y����i�&gt;&#xc;@��&#x7;X��bK&#xd;
(&#xf;�d��K��X�ҋo?��s�?�;&#x7f;�����&#x1f;�k��{/�қ��&apos;�g.m�;���lvu��&#x1e;�&#x1b;���xq3��h&#x18;ݹ8��=�������y�&apos;��jUl�u1�&#x17;�&#x1b;��&#x16;�cw�V?��������ͻ��|����崮y��U���ã��&#x19;�`����/c��Z�S��[o��������_��&#xf;�~�}&#x1d;Դ����ק���p4�0�aW�&#x1c;&amp;5&#x1a;ͽ�9��c�*���L��f{�+��j�Gz��&#xe;].Ί��ރ��;�_��C���X&#xc;a���?�?�G��@&#x8;�&#x1e;�\���/�;/W��}`x%F&#x17;��|�Kq0z�ʭ�&#x1e;r���J�&#x1d;�&#x18;���Z�L�&#xf;T�=��&#x17;;������_��7&#x7fc;3z���:+&#x7f;8&#x13;~��Sw$���H[��&amp;��#o�|jE�&#x16;�ɱ��&#xb;�O&#x2;�Ղ������$h��]?_&#x15;�&#x2;&#x1c;&apos;�&#x18;=��^ńm�9h�|���������lU\�&#x14;&gt;�ˣ������#���8��	+WOˍ��b=�j.G��ua���\�m�.Մ�7~�&#x1b;&#x7f;&apos;h��&#x13;���z�9n�彣��9�&#xc;��&#x18;��vWַ�Ɠ���kA�����w�&#xb;/o7��@���&#xe;�~q�9?��D�ʥe&#xe;�]�&#xf;_�4z����+&#x1f;�&#x1a;&quot;�K�x����+�ݕW�Ey����&#x1b;�o���5����.�2���K�om�x�D��ƍ�?1�v�&apos;O��o�^X_��gF&#x1f;l&#x1a;h���7&#x7f;�=�&#xb;M-h��&#xd;
M�&gt;���&#x1a;�y�-0&#x1f;�dU���F��&lt;&#xd;
�W�&#x17;���:����_��_��&#x17;���?��ч�7�&apos;�aR��M�W���&lt;_�_&#xb;�V�����e�/o��|{�*Y���}!�-ˋi&gt;��Z?7��M���&apos;���3�Z�ȵ&#x1b;�^�zy�dx�&#x15;�54����b�&#x15;�X&#x5ee;���Z�ǿ���D&#xf;W唣&#x1c;}0z�S&#x1c;��?&#x1f;���K�&#x7;�_��ʍk�&apos;���ᣔ��|�3��p�ʎ&#x2;��W&#xd;�&lt;�Z��+��&#x1b;����&#x1;��C&#x6;7��&#x7;7�&#x7;��&#x1;���&#x3;7�������S��W�%��ՙl&#x8;Q�ǿ�|�O�;������&#x17;����7��A��z ��&#x1f;&#x4;��x�&#x7;$J��w&#xc;&#x12;M&#x1e;@�&#x7;��&#x2;&#x12;�&#x2;��D�&lt;x�J�&#x1;f�&#xb;��&apos;����!&#x17;��C�&#x7f;�&#x7f;��&#x7;��&#xf;&#x19;R�&#x7;��&#x1;�z&#x0;��&#xf;�&#x1e;~7H���&#xb;����������!����T��&#x3;H�&#x0;R��&#x14;R��C��P=�|�z=�&#xd;��~��~�&#xf;���&#x1b;K������&#x3;,�&#x0;K}/a�&#xf;Wb�&quot;_H��f�־�&#x5;&#x12;ڜ�����&#x14;n�ٯ&#x7f;{�q�����q�}d�=&#x0;S�q|�&#x0;��&#x3;��&#x0;0��&#x2;�&#x6;��&#x2;��}ԓ&#xc;Ѷ��?�i���&#x12;&#x14;M�U��b�Ư���&gt;�&lt;&#x7f;Ș�o&#x1f;���&#x7;��&#x1;��^�&lt;����f&#x7f;�ܽ^��7n\&#x1e;=&#x13;�/mN������uޫ��,H�OMN�b�&#x16;������݅x����2�٫��GG&#x1f;&#xb;-T&quot;�Z�&gt;&#x7;F�C�l)�&#x0;����&#x19;����&apos;���y&#x10;�n��~�&#x8;�_&gt;��b�4!��s�?���Ͷ��+�&gt;�t� v�y�&#x6;o��E�/�Vl	&#xe;ZH�1�8Êl���;�c��&#xf;V�~W��W�&#xd;
��&#x1e;����眍��˻;~t&#x17;��S�&#x1b;�|[܀�\&#x15;�r@��$&#x7f;�~o����������b�H&#xb; ��هju�_�&#x15;���&#xb;_���᨞��Jqg_��գ���a�.m���Ћ&#xb;������s&#x1;?&lt;T/Ǎ�]��&#x1b;������&#x7f;����&#x7;�����W��&#x7f;�k_m���Y����&amp;���k���&#x7;�d����5&#xc;�\&#x17;]S&#x7f;�&#x17;�����7_��7���&#x7f;g�_�?�)��{&#x7f;��o�Է��M&#xf;;��c����&#x3;�l�錄q�&#x0;&gt;?��&#x7f;��u&#x19;��&#x5;s~&lt;����;j&#x18;����&apos;�W&#xf;U	�&#x7f;|���s*&#x7;&lt;���S�&#x7;}��7~���&#x3;&#x5;�֧�G}-1z+&#x19;]l��FQP�G���&#x18;�����M�=&#x14;ƣ�&#x1f;&#x18;&lt;���xd��wx�Q&#x1b;�&#xf;�^���n&#x1d;&#x6;��B�I�&gt;@gO��=�&#x1;��&lt;k4ȇ�5�U��g��ž�xj�ǚ&apos;�R&#x19;��&gt;��Q?z&#x7f;;��Ej�y��&#x17;ӻ�U��z�������o��&#x7f;�&#xf;�����&#x7;&#x6;�&#x1f;�A%�iP}��&#x6;ժY�ڢ�&#x13;&#xf;,�&#x7;&#x16;���Euo/r��+Q��&#x16;��/�&#xe;���;��+��Lţ���r� ��&#x7f;�v%��e!�����&#x15;�&#x7f;`�hm{��G�&#x5;�~�Nݱ�&#xf;�~&#x7f;7�?(t���&#x1d;]w+�&#x0;]?@��)�t�&#x19;�-p�&#x8;��&#x3;&#x1b;t�&quot;�N�&gt;�T&#x5;��ܟ}w/�K7&#x1e;��&#x7f;&#x7;@�&#x1f;���ڳ&#x7;&#x18;�&#x1;&#x6;���`�dm�.~��&#x1e;���/l�����|u��mV�u�o~���&#x84;/@��|�Q&#x16;����&#x13;���&amp;��^�&#x5cb;�|�&#x11;�ܛ&#xf;&#x5fe;��C*��&#x15;룫_����&#xd;��r��&#x10;&#x8;�4&#xc;�f�&#x1b;�-&#x14;Z&#xd;�&#x1e;���b���&#x1f;&#x1e;nޯ�Cl�����X�~i��Z5&#x1d;�ث�:�D��Z~��~%xR��*�u]Y�Ηv7^?�+��C�gn�C�0����ںWK&#xe;����x��ۢXcy����8�iT{V��w&#x1f;�g�������]����[늆��F}�����&#x19;��7F�l�ؿ�Y&#x17;ϕ���&#x1a;m��K��{_�m�/��&#x6;��&#x17;��}֢��?��&gt;�n��G-��w�G=&#x7f;�~���&#x1b;P�P[|�s �G_|�s�&#x1e;h&#xc;����=��g;&#x7;�=�F�=&#x1b;ꍧF&#x1f;�&#x1e;�TGp�&gt;�&gt;� ��&#x6;���x��]G���Ω&#x1b;��&#x0;�p� &#x12;�qm+�cwq�E&#x1e;����G��V�&lt;&#x13;��{��ӣ&#xf;&#xd;&#x1e;&#x4;u�nZ�P&#x7ba;p�&#x17;�&#xe;?��YǪ出I&#x1c;(&#x17;&lt;LG�&#x1f;[H�R.?�me�S�|�[9~�&#x1e;k�&#x8;�?}vݒ���D�&#x3;C��0��߾���&#x7;��&#x3;C�{�Ъ�?&#x8;���L�K!�^����&#x14;��K5�6��o�����b&#x10;�A	��k&#x14;���g��H���_&#x7f;�6���.&#x17;��&#x5;��G��KW��\&#x18;&#x0;�&#xf;���7�&#xd;&#x8;��&#x6;}�&#x1c;,^M�c�ѻ&#x1d;�����&#x19;�?*?PW�6������/Fo����a}4���+&#xf;����G������Z�U���v�&apos;�&#x7;P�C�&#x15;6ӓ�&#x1b;�f�&#x1e;~�,�o/&#x2;&gt;�VO&#xe;��f���$��w�J�=��&#x1e;XI&#x7f;�VR��;Q&#xf;����vzGy���5���w&#x7f;�����&#x1f;~�7{&#x6;�&#x13;��V�}&#x1a;&#x2;Ou�=�O]�L��&#x1a;�Fܓ�{�&#x1a;���x�$�&#x2;�2�-s1��z*�Ý�ro��d7�&#x3;�����������N9|�3��&#x1f;���X��V?&#x4;&#x1b;�1h��Ϡ��J�����Ϳ�&#x1b;&#xf;�?d{F&#x7f;��̗&#x1f;�3&#xf;��%{��J�\�\~l��o�X�*��j��&#x12;�&#x17;݇&#xe;��ʡ���&quot;&#x12;��&#x1f;��R�\��/��Ů��&#x7f;�ᗏ�&#x1f;�4���#qd���K&#x5;�&quot;��uơ$CIZ��9&#x12;&#xe;��G2��ԯ��R�W�ꇙ�lVU�ja�L&#x1f;�ߪ,�ҙB9�˙�Y&#x1a;=ϔ�&#x10;&#x11;G��SNF�O�&#x11;)&#x7f;�t[���ϥЙ��h!=�m{&quot;3��6�)&#x7f;�H(a�Wx_Ue�M�++�MV�&#xf;e̋O&#xd;��Pμ&#x11;�Ȇ��O��&apos;����.�ZCo3˙tQ���C�ֺ&#x1d;�R&#xe;c�&#x7; �����&#x12;5c��4�����&#x4;�&#x1f;&#x1b;,�&#x12;I���~66Fj�%�+��*&#x1b;kg���d���^�&#x16;��lYNw&#x10;�g��&#x6;��ϲD��&#x1b;��9i�5ɼ��[���&#xd;
k|���O����k���O��TY3��B����J��&#x16;&#x1d;N��-�L�1���j���:�&amp;SZР�ʩ3��hz���C�,���&#x14;&#x13;���&#x1;�ex��yYBf&#xb;?6�9�&#x13;9&#x3;]�L�����I&gt;�n�wOw��f=VFbhu��f&gt;=�5�(���G&#xe;_�uw&#x2;m�T�V�&#x2;m�v��Ѡ&#x1c;(sS��I�p\=����D��&#x12;&#x1d;�r��&#xd;J�&#x19;��&#x5;�ʰ�&#x15;s&#x1a;���%������mxA��,�2&#x8;Ia&#x19;D�&#x16;�*��Ӧ�1[&#xf;KI�����_2]�m7�����[ٰ&#x0;���\�&#xd;
Wْ�&#x1b;�O-ۓ-�;e���&#x19;9�&#x11;&lt;&#x1c;�	c�fQ�j�u�7���@�rq2�a�����,1~�0���&#x3;Q&amp;����M*�`Ya�d6�s�W&#x16;ʙJ��֩��&amp;�uOS,v&#x1a;	+�2���&#x13;ad�ä��X��&amp;&#xc;{a&amp;z��&#x4;탚�aI~�v�&#xc;e��&#x10;��)&#x10;�R�&#x0;��{i:�$Iݠ&#x17;]Iݦƒܛ&#x1a;�1�0{&#xd;��+�&#xf;�T&#x13;��&lt;����dY.�Jy��&#x5;&#x1f;��N�L&#x18;]�!&#x12;�&#x1c;&#x4;�MU�ɬ�ww3%��J���z��&amp;Me:�&#x1d;����e/;&#x19;�f&#x16;&#x4;���&#xd;
H� @E��g�&#x8;&#x16;E3H&#xf;yuĺv&quot;&#x4;�&#x19;&#xd;5:�&#x15;�&#x7;��3&#x10;3x;&#xb;5�^�ZR�4��b���&#x1a;-��&#x11;%ж�J�B�)Y�C[���&#x4;yڕ�&#x1a;dǳ&#x12;�&#x1d;dQ(AK��e]R��A�&#x3;���&#xc;�Y�&#xc;�S�ʧ� YO&#x4;�&lt;&#x19;	&#x4;�&#x2;RunM:�&#x1a;S��5@���6&#x1;�v�&#x1a;�P��d����&#xc;�Ӯ�a�&#x15;�ɐ/&#x16;[&#x0;k&#x0;���y�`&#x17;��X&#x0;&#x6;���C-(�҆�!6���r4��by&#xe;&#x5;$D��&#x1c;@F�~�`&#xe;&#x1c;��0 g�p����2&#xd;
�N7&#x2;)��&#x7f;�,պ}&#x17;o�4x�&#x8;�v.u$�~*�b&#x1b;�S&#x7;�-벆&quot;�-�&#x19;&#x3;&#x12;�&#x18;�ؖ�tԧ�[5��Y���U�ɭ��&amp;T�˴�����׳�fu~&#xd;
�w�o��f&#xb;E&#xc;��_M&#x17;���lsο�&#x17;K��%t&#x1b;Cq�I�;���4_M�W\�����&#x15;&#x0;u���|��lΎ��&quot;�sS��_B�:0-�_&#x6;�f&#x0;����Yyk�_o&#x0;2w�-�d���|�Y�&#x19;&#x3;�&#x8;�D�_dS�BF�Y��ŝ���+5�L�&#x0;����f&#x1a;J&#x14;����t3+��	&#x6;��o��&#x12;&#x2;c�Y�e�I�ŝr��ڇ2��w�t&#x5;�&#x2;RuBF�k��11��K��&#x18;��S&#xd;�]&#x1;&#xb;B���.�(dU�Js�u�E�&#x1d;�@�R��&#x6;ҴT��O�;���&#x7f;f�&#x5f8;&#xc;�,BY�e&#x3;5̲��A�vϩ`X�5-�X&#x7;&lt;R&#xb;&#x1e;�$�ȑ�E�&#xe;��6&#x1d;D���w &quot;�ȅઅ&#x11;,�&#x1a;���	J7�� � U��|�o�&#x2;�zkmB�]&#x2;�A}&#x3;&#x3;��Y���/&#x1a;�&#x1a;&#x7f;�����Z�`�\&apos;=���;eW�@��6�&#x19;�E��&#x1e;����&#x0;@&gt;z�&#x1a;A;��=���H�eNK&#x1b;i{�~�XID&#x3;а���&#x2;�&#xe;(&gt;�W#&#xc;�&#x13;Y7&#x0;H0�]�&#x3;-���1\&#x4;e��P&#x18;�&amp;&#x1a;&#x0;�\���pFG&#x1d;J��&#x3;x&#x16;�&#xb;&#x1e;}�1̃Xh5u�pY&#xf;灝u&#xc;x�&#x8;3$Z&#x1c;�9��&#x6;S�9��o���x��ֱ�b}	K;k&#x0;$h;`�&#xd;
�%�&#xe;ɓ���n��s10�Q�&#x4;d.Z2|@�&#x0;&#x1b;�&apos;���f��&#x17;tF&lt;;0)��נ&#x7;&#x16;OG-&#x0;�ƶK�� 	�g���nK&#x6;_��6Si&#x5ca;Q&#x19;&#x10;��GkkT]�	j&#xd;
�J�L	��g��&#x7b6;b|P���]�	�3&#xb;t&#x18;�E&#x6;�hZ�G��G80�t�&#x16;��zT��n�.��H`�&#x1;%3&#x18;�=@&#xb;�&#xc;�V��&#x17;&#x15;�{&#x15;�M&#x18;�AU7�&#x19;��s�:�&#x8;1�1�N�&#x3;�g�h�&#x13;P)X3k�$8_��&#x1b;挠�o˩�&quot;*+�&#x1b;�&#x7;d&#x6;R�&#x1;�&#x2;V��&#xd;
���jXj�P��t�P�o�`i&#xd;J�HoH&#x4;��j�1d&#x4;q&#xd;&#x17;��5����G&#xd;�J�&#x1a;|S�����&#xb;&#x3;5&#x16;&#xc;��&apos;@�*&#x1a;��*�,��M	���7�&#x3;~�|8&#x0;�2�&amp;&#x18;&#x1f;�&#x17;�+;����}j&#x15;�S&#x13;�#&#x3;�J۵�����A&#x11;�a;���r	Ԇ-&amp; �8[&#x17;&#x3;�D�uS�\���)M��X&#x2;V�&#x1d;k:3XXS�&#x17;ءx��&apos;:��cՌ�kI;�tEzǤk��4�H�&apos;��&quot;�h�r0I&#x5;*�&#x16;,ÄO@��B�llSRQ��d~��&#x14;e�K&#x0;���&#x1e;�j=��@,��r&#x11;�{�&#xd;7r&#x1;s���jW�&#x7;����r[&#x0;�f������B&#xd;
&#x14;�,�+��&#x15;���0`�e:&#x5;5�&#xd;l&#x1d;Z&#xf;��&#x12;�&#x4;S&#x1a;&#x8;&#x1c;p&#x7f;)r�&#x4;�&#x1f;+m ��j��o��v7&#x1;�����&#x4;32�a&#x15;�I��&#x14;�r:w&#xe;�#-Y����S��1p&#x4;���d&#xd;
R4�p&#xd;�u&#x12;��&#x0;�kh�YHS��y�9���&#xd;
�Ƈ&#x0;xtb�&#xc;�&#x3;v�!1�d6s�&#x1c;�&#x7;�&#x5;@F2M&apos;��&#xd;
&#x1f;��&#x1b;���&#x5;,Rm�r��&#x18;&#x1e;��Mf�&lt;&#x7;&#x1a;���&#x1a;B%͒����HS��&#x7;K�&gt;?��_��[&#xe;&#x12;�ԤI���f3��aPB�ҷ��BL�ai�s�&#x0;1�&#x1a;�i�9��:x��{#��6�	�&lt;�q&#x10;�J�����|G&#x1b;l��wc&#x18;�*�4������)�W+�l6�TŴ%��)@�48��&apos;t7&#x1;VW��9+&#x0;����&#x1d;!��PHq�&apos;��v]ܞ��&#x2;�ʙ�@0�&#x0;�h(��&#x1;��#�&#x0;wV���lY�&#x16;[�&#x17;&gt;\��0&#x1e;��I&#x18;S�����B�P!&#xb;̨&#xd;
&#xd;
��j&#x18;&#x1b;�Q��c&#x8;g&#x8;�d��hQ���&#x15;?�����e &#xe;I���(��0YƂ�f�2���� �����&#x14;�|&#xc;X���4�B.ð&#x0;�9�a3x��&#x1;8R+�ͺ�ma�L7�[�v�(�b�*&#x17;�}�&apos;�&#x15;&#x16;`?&#x6;�#����i)35&#x6;�J=�&#x17;�i7&#x6;�(~z�,2&#x3;&#x16;�l&#x1a;�}�Sr4�l�2L&amp;k@r(��[P@�]�o�O莱�����03ho��.��aV���t�/�&#x6;&#x15;�&#x5;���~&#xb;j&#x11;�&#x6;�]&#x15;�g�Y�&#x7;( ����2�6~&#x1e;�w&#x4;�R�Y�-�`&#x16;&#x17;�J���g�h��F&#x2;&#x13;�F�+k��h�t�[�e��&#x7;&#x10;�Su���&#x15;@=����&#x6;,��B�v�n��~�W`�i�!&#x1a;O���&#x4;C�݂��*�n����+�M&#x8;P���&amp;L�ф���q18L3uK�&#x2;�,=&gt;�.֠�&#x14;�s�7�&#x8;/l�P���S�Y&#x1a;�z� &#xb;b��ح;&#xf;AH�f�	�}kd�&#x15;�HT�|LF:�ڙ3�&#x0;)�J}�6��2�+O�L�Ȩ�+U��������&#xe;ʮ{N&#x1f;&#xe;�d&#x10;IZW8/m&#x4;�!&#xb;��]&#x3;��6�&#x10;�tpy�6�&#x14;��&#x15;Kc����b��}&#x10;�&#x1e;�&#x16;5&#x7;;.��&#x1;Y]�{	&#x12;ұՓ����&#x1a;��v~(@6-ۇ��!��&#x6;۫h7&#x8;��:&#x3;���&#x1e;u.+Hv&#x13;P�H[�q�E�}X&#xe;�&#x16;��&#x6;�t�D����&#x15;&#x7;&#x4;nZ&#x2;���{ؔk`{&#x18;&#x12;&#x12;�&#xe;�&#x8;gҧ���&#xe;bFc�:&#x16;�&#x5f8;s��(������o�b&#x8;:B�F^�{nXx�6@��x�{p�kle�L(�~&#x6;�&#x1d;&#x1d;y~Y�,�F&#x4;�&#xd;K&#x12;�i�0&#x1b;3��&#x10;�RJ��4?�B����}�,u&amp;&amp;�dDg`�dr&quot;&#x16;��&#x0;&lt;�k4Iar��V&#x1;5	,z�&amp;�/����i��EQ�&#x2;܃�&#x1d;w��!8�Kz&apos;���9@���&#x18;&#x1b;&#x5;|&#x8;�4_�3�2�?ВM2��N�7&#xd;�h�`�p�,3���&#x19;��R.�&#xc;&#x10;�&#x0;�i��ۥA_��&#x2;&#x5;:�毗���uz�&lt;&amp;&lt;�rr&#x2;���&#x1;�Km&quot;D�&#x17;��H&#xd;
��d�]���&#x1;�xnPVBb�@&#x15;�&#x5;&#x7;d�K�&#x16;��b��&#x11;i�I��:H`�&#x0;�,_&gt;�&#x15;&#x1a;���R�r�Z��&#x1d;��T&#x18;�b[N7ОPϠ�w��v��r�H�C&#x4;A�&#xd;
J���l2ٰ�&#x15;��^6~�P��ۺ~M�e։n���6��eG&#x7b6;��&apos;&#x14;�X�&#xc;&#x10;�&apos;�S&apos;�:C&#x1d;d�Md&#x1e;�G&#x3;J&#x1;�o�{�&#xd;���J�:&#x18;:&#x15;�&#x7;&#x17;��2n&#x0;�.��r��A����&#xe;�Z���֫�&#x5;�`��R*�P:��p�&#x1e;&#x13;�$$R˷����Uu���.��a��LE����Eݵ�2�&#x4;�&#x1e;&gt;��bi�~��&#xd;
2m-Fj@Դ�&#x12;�IGVh&#xd;
0(&#x3;ZЕl�.�;��&#xd;�ޟS�� Ejc/��q�`�%&#x1;&#x0;S�&#x1a;��f�ױ�&#x19;@|��|�q&apos;&#x11;�-�I6%ǐ�S&#x18;^&#x2;��l����d�z&gt;�&#x11;&#xe;)�&apos;v��&#xd;
/V0��$�k8���S�&#x6;�6հ&amp;@Sꬬc&amp;7g�r&#x1a;p�v ��&#x17;`&#xe;��Q&#xe;�؝�f��K\�Ag�&#x4;��L�&#x11;�l�Ni&quot;g���8�aK$_�@�(x�v����&#x14;�&apos;&#x1b;�:&lt;�&#x17;��&#xc;��&#x1d;&#x12;!}�ԧW�R�x[U�t���5�&#x13;8&#x13;��֍h&#x1e;&#x1a;.�&#x2;����x�75&#x1;/tNX��NX&#x10;������(vN�̦=�a��ڃ�:�&gt;&#x4;d&#x1b;�R�\��&#x7f;�]�&#x11;q{!ؤ���4��&apos;2c�����Ѓ�l�C@�&#x18;&#x10;&#x1;;�hBJ&#x1b;4k�o�	T�&#xd;
&#x18;��@�M�.��&#x3;&#x2;&#x16;A�&#x1d;�&#x1e;v&amp;� ����&#xc;�&#x14;�9r&#xd;
&#x7;�m,o&#x18;aуK�@]rЪu�zP_�:�#&#x15;fw��`���&#x11;&#xc;�&#xe;�(�&#x6;RK@�*oO�	~c�&#x14;U����K	nZE�?c&#x10;O�&#x8;�������P���Yn3��&#x8;�A&#x1f;�&#x10;n_�ּ&#x0;&#x7;Y&#x15;�&#x1a;&#x3;�R��N`&#x2;,�Be&#x7;�H#&gt;&#x6;P&#x12;@�5�^�&#x7;	���+�(&#x13;�7e&#x18;:U&#xb;�w�l�4^;�K�=$��z�M��&#xe;B�{A�bמ�B&#x5;S�{EpG�qڂ��N=X�og��2��&#xf;XG&#x12;&#x10;+&#x1d;]&#xd;
�M(�&#x12;ˎ��!&#xc;�����p×�3&#x4;W&apos;&#x5;D&#x5;�gLmmTR�3G�&#xc;��g�(��Ѱ�M�&#x5;&#x10;q�X&#x12;&#x0;&#x19;�_J&amp;K?�&#x5;�&quot;A&#x6;(,�MO���A��g�ws���ql&#x1f;�V&amp;Y6)&#xc;�&#x6;�&#x7;�S	�Z��&#x0;w&#xe;P:�N�KL��&#xe;�&lt;��(���&#x6;��l&#x18;T&#x2;*K�Ŭ0&#xc;&#x14;2X#&#x5;\6Sj)��&#x18;j�[�MG��6���f&#x1f;�*��U�&#x1d;����6��Q�1���&#x4;�T��×-���L�̆�a�֝&#x8;�&#x1c;&#x13;�[�N&amp;�v��#-�除E&#xd;
��&#x18;�e�rS5_&#x1a;�&#x19;���Md9S�+�&#x1;u�O&#x15;@.�&#x17;�;n)&amp;r�K���&gt;��L&#xc;�g&amp;�&#x1f;s;&#x5;P2]�&#xb;&#x0;&#x7;|O�&#x1c;���f;&#xb;�k��Y���1Lj&#x11;&#x8;g�&#x14;�����&#x12;H&#x13;�&quot;ԾJ|��K�&#xd;
�&#xe;&#x10;&#xc;�ZN�&#x10;��X&#x1;&#x11;f���nj&#x10;�&#x18;�&#xf;&#x1;W��V�&#x1e;�&#x1b;��������\&#x15;��&#x14;f)�;�B�&#x2;��&#x5;	�s�e��;��ݖVP/��I�&#x17;��&#x1a;��r� R&#x1f;�u&#x19;o&#x10;&#x1;��9H͘X�K��#��P�t7��h�.S���;HUF[n�&quot;v��{�}-&#x14;�{&#x8;��،��&#x0;�P��-&#x12;&#x0;�&#xd;
&#x6;x^��&#x14;�^0�+z�]��&lt;�Bp�n5&#x1c;-3&#x11;�|&#x0;.aVc&#x15;��xι)h��aA&#x4;&#xd;�a��E�&quot;^X;a&#x1f;��&#x1;,&#xc;&#x15;�2J���� w��k&#x18;&#x8;��O�Eiԏ�y&#x1b;�y�&#x4;w&#x1;)�[��&#x1e;�Z&#x0;t&#x3;�X�~&amp;,3�P]&#x5;�,)M�2�B&#x16;��tf��v�ۊ&#x0;�Eg�s,��2�w(�&#xe;���&amp;&#x11;	���&#x3;�i�&#xb;#�s�t�O�6*���h�8&#x1f;&#x7;�a�Ӿ&quot;�RE7�l��&lt;&#xc;TT���&#x2;F�&quot;�PS)�v��&#x3;Q�&#x15;���x��&#x8;��&#x18;��(&#xc;&#x1d;��ȓ�?\�&amp;^ʋ&#x10;&#x0;V&#xf;&#x1;J,��&#x1a;��&#xf;҆^���-&#x1e;&#x1e;�B&#x17;(�&#x15;&#xd;�X,&#x16;&#xe;8٦��*&#xb;��Ö!�i2�MaZ@��&#x7;�X��Xڹ� �H��Yy6]ޝl�ٞ!2 �&#x4;c�&#x0;�xn�8h�L��%&#xc;n��&#x18;Q&quot;&#x16;f2&#x5;(&#x1d;3��&#x1b;/��UT/&#x1a;&#x6;���&lt;�pf&#xc;#�&#x17;/!����&#x2;ZRf�kn1�E�&#x1d;�&#x1e;�����&#x0;C!��JL��&#x13;�&gt;�D�D���ӏ&#x380;Mh铅+�%�&#x1b;4���_�Kr&#x18;�K��s��t;�Nh;ȹͩe!��u��|	)&#x1c;6q �ahL���� XM�ZN�O�{&#xf;m���&lt;;&#x1;&#x2;&#x18;cz&#x18;xt&quot;�&#x4;�&#xc;�G+&#x18;�\����Q��J&#x15;��BO}�`�&#x0;��d�H�T��&#x1;n��`��j�&#xd;&#x19;�;I�&#x7f;�ƒ�&#x1c;&#x12;�/\Э&#xd;
T&#xc;��&#x16;&#x16;J�&#x11;�a�8)���b��&gt;F&#x4;�i&#xb;�Ȱ��L�&#x1d;��&#x10;��&#xc;&#x2;�Z�&#x1f;&#x18;�V&#x11;`�&#x10;)8ׄP&lt;ѐo�|�q��uit?\B��p�� &#xb;^���*m��&#x0;&#xb;&#x1d;Y&apos;��6�&#xe;4�m&#x1c;bB��y�Cxrl�1�(ĵ5f|�&#x5;�o��&#xb;��]�ğ蹁�Ex&#x7;&#x1b;&quot;��&quot;�C҂�2A&#x7f;�kC²t�&apos;f��*����M�J�l&#xd;
Bʠ&#xf;D�&#x17;�&#x5;}��&#x10;O&#xf;Pc�&#x1c;b[q�����(O��tR4&#xd;
&#x1a; ��A9)� Bڐ����&#x1f;����u&#x8;6��&#x11;=��f�,f&amp;�3V�&amp;tB�&gt;�lwŪ:&#x1;2f�&#x3;&#x6;s�&#x7;�W��9�&#x15;��b�&#x12;&#x6;�&#x15;q�&#x11;��ơ&gt;J0��5�&#x0;[d&#x1a;[�P��ǁ�&#x19;�:���x��&#x1d;�ȨZ��&quot;���|�&#x13;T�cTBJk�w�e�?� &#x0;&#x6;&#xc;āL^2.&#x8;��5�B�T&#x1d;J[�pkc&#x15;�r��Hw&#x6;���&#x12;;�U�t&#x14;&#x11;̊8.4l�F��3�#&quot;T�^D�&#x1c;�&#xe;���&#x4;���&#x10;F�����&#x3;j��1^�&#xd;��L&#x14;�k����(��*7�Tf&#x13;W&#x14;&#x5;$&#x7;�L�^꜒&#x11;�&#xe;8=�o�w&#xc;;��&#xc;���&#x1d;}�3J7�&gt;��M�R��`�&quot;-�&#x7f;l �&#x15;d^�N2K��&#x10;�&#x0;1/Nf&#xc;�4���&#x1a;���r^��wNW�r�&#xe;^S����϶X���\����&#x12;P&#x13;��b&gt;C��FPF��Ҙ�됵S���x�&#x2;��&gt;I��|�OeFg�ɤtܡ&#xb;,o4�L�&#xd;
w��&#x3;H�;g�&#x14;f`:&#x1f;�~Qi2�P�p&#xd;�&#xb;-���f}&#x13;漽	&#x18;B�&#xb;�L&apos;�bW���x�&#xd;
-�y^�&#xd;
Gq&#x1;&#x3;&#x1d;֜�&amp;�&#xc;�H)�&#x12;��v���t���&#xe;�&#x10;�&#x19;&#x18;�$��&#xb;�&#x1;�[L�����f&#x5;O%3�(&#xb;��c�y0&#x1b;`@���&#xd;
[�م�|&#xd;
{a���.�&#x8;�U߂S	a��Z-3Q�ڔ��S�-5���ȁĄ�(&#x8;�.�(��A�&#x15;��K5&#x17;�d�&#x15;�d	��fY��1&#x18;Xu��i~��^&lt;&#x18;���2&gt;K&#xc;&#x2;�jB&#x7f;.&#x7;��=YHD�V0�Eu/&#x0;�7&amp;��J��&#x6;L]&#xe;�g\&#x13;~&#x15;�&#x10;�i�&gt;��&#x19;�r��1,�)K&#xf;��&#x0;6QE:�0Y�&quot;e&#x8;�k�&#xc;YIE�A{�&#xd;
�jͮ�a�W�fW([�ծ&#xb;DF�q��-����*&lt;�YW�2&#x1e;O7&#xd;��vs7h0|j!n�&#xe;��2&#x0;J&#x1b;�&#x1f;��\�i�&#x10;o&#x10;��v�65�_�؆�&#x6;�2TH�p��g�[&#x18;��*XQEe;(�hL,�u&#x17;}&#x11;5��&#xb;�&#xd;ʃ/�{&#xd;M��E&#x0;�aMc&#xd;6�_&#x16;�&gt;��_N&#x7;}j&#xf;�4尔�&#x17;S{Pc������&gt;j�A�&lt;���h�&#x1a;�t&#xf;k�A�;����yR&#x8;l�&#xd;
=��To�t�&#xd;&#x1b;&#x11;�&#xf;�l���&#x7;5n�%�&apos;$&#xd;{r�&#x1b;=xcH&#x8;���&#x15;&#x18;hP�G��H�&#x1d;L&#x13;0���&#x1c;��&#x1a;uP#��&#x7;�&#x18;�؃��&#x7;��&#x7;�`&#xf;V	Ho���U�}&#x12;OM�cT���&#x1d;&#x11;��g3&#x15;~P&#x1e;&lt;gxIub�&#x12;���-X�Y�/&#x1b;�/K?(�Ay����&#x1a;e9(������&#x1d;���&lt;hO&#xc;�K&#x7;���A{頽�ߞ���l&#x7;e5(�~�g��&#x1b;�͠&lt;h�&#xf;�s��ܠ=7�&#x1b;��T�@CY&#xe;�&#xf;�7�&#xf;;��&#x1d;̏&#x1d;��&#xe;�c&#x7;��zP&#x1e;��&#xe;�o&#x6;�3��͠=3h�&#xc;�Ӄ����zо&#x1e;��&#x7;���������{jо&#x1a;��&#x6;�A{rО&#x1c;�&apos;&#x7;�&#xd;�ы�z&#xe;�ϋ����&#xd;��&#xf;��&#xf;�ϧ&#x3;�N&#x7;�&#xd;��e٠�&#x7;e7(�A�&#xc;�zPV��&#x1c;���s&#x3;~v&#x3;~f6�~y��&#x1;&#x7f;�&#x1;&#x7f;�&#x1;&#x7f;�&#x1;&#x7f;�&#x1;?Ü&#x1a;�&#x7;�&#xd;��&#xd;��&#xd;���%����&#x6;�c&#x6;�&#xf;���#����������f�}=�ހ_�&#x1e;��&#x7;�M��&lt;�G�&#x6;�&#xd;��&#xd;��&#xd;��&#xd;��&#xd;��&#xd;��&#xd;��&#xd;��&#xd;��&#x6;O�&lt;&#x18;�&#x18;�W&#xc;�&#x1b;�g:h&#x7f;��!&gt;�W&#x1e;�?&#x1d;|&#x7f;�_݀��@ߺ&#x1;��&#x1;��&#x1;&#x7f;�&#x1;&#x7f;�&#x1;&#x7f;�&#x1;?�l�~&#x7f;}쀟퀟�&#x7f;�&#x7f;�&#x7f;�&#x7f;�&#x7f;�&#x7f;�&#x7f;�&#x7f;�&#x7f;�@��&#x1;�ځ&gt;�&#x3;~�&#x3;~�&#x3;��&#x3;�gu�/�?\�l&#x7;e3(����x��f&#x1f;�*W����&#xe;�i&#x1f;h�&amp;H��&#x5;m���=H�j�&#x7f;.�a������2��j��y�!F�,�AY&#xf;�jP���&#x18;��~�g���&#x7;e;(���u�?Z����&#xf;����&#x18;���)��R��d�#QfH��&amp;T��&#x7;�3��&#x1c;��&#x3;�Pi�����/�&#x1c;vP�A�?@9�P��ۃ����X&#x1e;���D&#x18;�vPV��&#x1c;�Š��˾?&#x7f;LS$�/�aEZ{����H�&#x6;#pd�n��1�������&#xd;���ec�)�Y��`$���&lt;&lt;�Z���&lt;E�՛;�FT�Wwe��ʩ�?�&#xe;A�e7(�A�&#x1c;u�&#x19;���&#x1a;��,&#x6;�A&#x7f;�X&#x12;&#xd;
�1!�������&#x7f;?��G^�jB|��W�a&#x15;�X+�5�(�&#x2;F5��&#xd;j�a&#xd;&#x1d;K�&#x1a;���k�A�&gt;�Q&#x7;5�F&#xc;k�&#x1c;�&#x7;�hXs�g42��&#x7;5����[�&#x1d;��a�A;@��&#x1a;��&#xc;��a�&lt;��r&#x1e;V&#x1d;�D&#x1f;�I&#x1f;�I&#x1f;�	ZcXC��O�&gt;�&#x12;}0��C�C���A��ey0�Te�.�_5�:&#x18;�&lt;��&lt;��&#x1;&#x19;���������&#x17;&#x7;�/&#xe;��&#x1e;|+=h9=h9=h9=&#x18;;��닆��`��ߡ&#x19;&#x1e;�!ɨ�&#x1c;�$�5&lt;Q&#x10;&#x16;)�B�E�&#x6;�B�k�A�:��GF�k�A&#xd;&#x3;7&quot;��*t�/&#x7;iQ&#xf;j&#xe;�&#x3;�f���=�U5��&#xc;��u�&amp;&#x1d;�J&#xf;�2c��5&#x7;�R&#x7;�P&#x7;�&#x14;��ԪW�����9�ѕ2ɢ*y�&#x18;�&#xf;�P��A&#x1c;��֬�&#x19;ը&#x18;�N&#x1c;V�&#x7;U�l�U���:�&#x1a;j+Z�DTq�&gt;����&#x1e;X\u�ϴb�n����4��&#x1a;wP#�|�&#x1d;ڬ�&gt;�j�Ϝ�v�-2��&#x1d;,��3���&#x11;Dʣ,�&#x19;ΐu&#x7;-�!;�n�	&#x19;WU;N��il6�&#x1;��!��&#x1c;C_��&#x3;%c���k:�^���*�U&#x14;��DJ�Bxٜ�bHU��Ǚv{��\c80ք�@���x��#��z&#x1b;��2�)ͨ�L&#x19;��&#x15;���fz,5���m�$O&#x17;��&#x19;�&#x1d;��&lt;#�~V&#x19;#��&apos;J٬��bɄ4�u�%��ԫ&#x16;�,ֹ�~,2&#x5;S/ٟ�ʳ�-9f|�o�������&quot;s�&#x3;&#x1f;K&#x1e;&#x0;j&#xe;�1&#x1c;�w&#x18;F����4���CX�ɲ8�Z��ٖ&#x10;�&apos;��$�	&#x13;�	�AG�완u6:&amp;a���]��&#x18;�����O���$����_i&amp;���HGtث�X�^��a��}&#xb;�1�j���2&#xe;A��Q9&#x13;R&gt;F�k&#x19;:&#x13;&#x1f;�SY@�G2�3[�`E3�&#x7;&#x13;&#xd;�b�2wbu��&amp;s�&#xb;�u�&#xc;�M��e��b�&gt;��4&#x11;�tF0g&#x7;�*K|�뒧Y&#xd;��f	��$��&#x1a;&amp;w�&#xf;\�M�f\�^�-s����pL�&#x1;O&#x1a;&#xd;
�&quot;�T�&#x19;S��F�&#xd;??;�6&#x1b;kE��	&lt;&#x13;���@0^�8u�d��8..�b&#x17;&#x17;&#x7;J�Sr	�.����ŧ�H&#xf;�te&#x1b;W����M&#x5;&#x13;&#x1f;�̴vq�]|.0p&#x1b;�&#x6;��E\&#x1;Qަ&#x15;�z؛&lt;��&#x7;�(�A��&#x17;I.&#x1d;w&#x1e;iR�Y&#x7b2;,x���s�Ai�LCOTw&#x2;&#xf;�S�j&#x13;im��Q� Ð�^n!��*&#x18;�˓@Vn�&#x18;ظ&gt;&#x15;T����T�b�&#x3;�&#x5;I���~5�#{�X�Y&#x11;�my�G��K�4W&#x13;�&#x14;&#xe;�&#x4;�$�2�e1�&#xb;�&amp;�����&#x19;ެ��d�&#x17;&lt;9�(Q̔H&#x16;&#x13;�&#xd;
�p_˄%�&#x12;����h&#xb;T��&#x12;�O�̮4֞L�LR�&#xb;�pb��V��4&#x19;25��C�&#x13;5��	4�X3^Z&apos;i!&#x17;&#x13;��1SUat~&quot;�9S�2��&#xf;&apos;�C��y�bV�;�m&#x1e;�ln���#��A`&amp;��e&#x1b;ʱ�dR�^�7F̷���B�66�(�(���ڦ&quot;&#xe;ٴ�wJЦ�C&#x1e;6u1���/CM��&#xc;&#xc;�w~����U��S]��+�����V�&#x6;\&#x16;�&#x14;�!!x&#x17;diC��.�Ҵ�	TG�:�]�Ra���&quot;M9m�V�*�`s耛�!L���#SkFH+i+�4T(�m&#x16;ߕ��U���&#xc;�&#x1;�3͙d�&apos;�lsĀOۓ6�XP%۫�2���~����ؑ�O�#-Mv&#x3;�ʎڼ�&lt;&#x14;+�����0q&#x16;F�	Ś�1+U&amp;�6ic&#x1d;�ؤ�VҴ9�&#x1f;io�NU&#x13;�&#xc;�.#N�r�&#xb;���I�ż���xȢ�M�&#x3;�U�V�����l����떕�t�&#x2;&#xd;+�m{ԃ��]{&quot;E�dt�&#x19; gG�yyA��;�&#x1;U��@��&#x10;�9RmI�&#x18;�����3���!�k_|&#x5;7���k]��o�]�/tHxNOcR:=�&#x11;�P&#x6;U�R,���z.��i����&#x19;S������&lt;�&#x15;j�6	�&#x4;R�e1+�&amp;�g&#x1d;�O�K�C�i挰6M�f�yyg��Ϙ&#xc;j�&#x8;&apos;�&#x3;��O!�t��&#x1c;OH�2&#x4;�&#x18;-C�Ue&amp;x�L&#x558;Ue�&#x6;�fR�|{���&lt;ayD&#x6;��|o L3f��^wڍ&#x19;��b9�*��PO���&amp;&#x1c;&#x1;��_�Q�f��&#x1;�H��)&#x15;�kg&#x6;�Hç쇊2&gt;J�%s�ʩ��l�&#x1c;aq�~�T���b�y@�Fe�E���;&#x11;@�V�LΤ�&#x3;���&#x15;��&#x16;K`}�&#x19;�&#xd;A&#x7;j�M�s�V&#x6;&#x18;g�O涘L�#�xx&lt;U�S�&#x8;�5O���d��f�(fTP	�52!ׂ)wC:&apos;�,�:�y��A1���hț�t�1��&#xc;9�*}aZ ��w�ϧZ��p&#x7f;�&quot;&#x8;&#x1e;z&#x14;5&#x1f;����vZY&#x12;QI&#x5fb;��&#x1c;Tʳ�&#x19;�.�kM&#xe;��y%&quot;&#x1d;E�ߣ&#x5;�&#xe;���ԧq�wf	4&#xd;Щ�퉰)ق+���&#x3;P�ZF�aҠ��c�&#x0;s��&#x13;f!�!5T��&#x1c;�&#x11;Ǉ�MVg��0���cnL��;&lt;��U��&#x16;9AGv�&#x7;�&#xe;��CN��k&gt;��&#xb;&amp;(�q��Z&apos;�],&#x0;~�\�;)��d�O&#x0;�xt�1��,s(,Ϥ&#x11;�&#x7;�g�&#x2;�&#x13;7FAV-��BT&#x10;��p{�	&#x6;��خ���d�/V��l&#x2;&#x82;�o&#x13;�k��L�&#x6;m����d�����&#x2;��|[&#x12;{�p�&#x4;�ŭ&#x9b;t,&#x18;&#x1e;�&amp;ww�t�!�����&#xe;�yߕ�=R&#x1d;�1&#x3;��m�$�z&#x1a;6�4F!��&#x3;�&gt;ښ&#xc;e&#x1b;�Q�Y&#x7f;т�&#x0;�]�u�&quot;xh����b&amp;&#x15;�E&#x15;lئ��L�i����ؾ&#x1f;(ɵ����*&#x4;{٨l�e�&#x6;����&#xe;�W&#x11;�&#x1;�5i�ZR�:�B&#xb;Ā�U�&#x7f;&#x2;3&#x1f;͗`&#xe;��{�svi����=�)̆��&#x13;,��p�&#x0;^nAT�+#��p#���;��c�:�OH?��h�&#x19;�����&#x6;�v&#x2;���_��&#x1f;6�&#x6;d���P&#x6;��{&#x4;�&#x11;Α����2����&#x7;&#xf;G&#x4;A&#x17;B��E�&#x1;ǗB`�&#x7bb;~9&amp;8�q��AY��&gt;&#x1e;&#xf;˽�mj}�y�z�L�^Y��s�e���V��9�&#x1c;������A��D�C�U&#x1a;�&#xf;�3Jm.&#x2;��^7�)�,/!h�O�ȹ��Lv����lF�PS:�μ&#xf;�3�e�m7����if�h�Q�&#x1e;���,��l�a&#x58c;�k&#x3;�_�e��&apos;Sǧ-�7���`�&#xd;q�S&#x8;�B�&quot;kHE�&lt;�,&#x4; �o�&#x6;�&#x10;q`�[U�c�u�bR&#x6;�@��OT&#x1;��ijT�:&#x6;�)?&#xc;H�&#x1f;7����&#x18;B�&#x6;���&#x3;��&#x2;����͌²nG�&#x12;}�M�D�y �u)+Y&#x5;�����Ӎ�]i�Q�8[&#x0;&#xf;?�)��&#x15;�7&amp;EP�N�8C&#x10;�&#x1;�&#x18;%�&gt;��p�b�ڸ�L{&#x2;+�A�&#xd;��r�*&#x13;�/=&#xf;��*�&#x1a;�&#x14;}&#xc;*cL��xY�Q�.�}�r�u#`�&#x8;&#x3;�U2�&amp;���i�c&#x1c;��E&gt;/tV��p�&#x8;��&#x1c;5�&#x1c;�ߵ&#x7;+��r&#x6;�&#xe;/@���%M7&#x10;:&#x5fa;w]}�W�W,��5�&#x19;P0���&#x14;&#xd;
�e�p��A۬�&lt;�&#x19;�B�&#x13;�:�&#x14;TM��S��&#x5;%&#x18;��fF&#x15;&#x1c;&#x1b;��0y��G֨��5� &#x13;�tΎ&#x7;��k�,����M@�i&#x3;�He��Ye��I&#xf;�0�&apos;]�A�&#x5ce;[h,F�י&#x1b;�&#x16;)O�&#x6;%�gi1aZ&#x1;��D�����I1�&#x4;p����� �o6�|o�D&apos;7��&#x1f;4$&#x7;&gt;��ǀ)@.xy���D��,&#x17;˛������,yk!~7�g&#x5;_��F:1n��Y��{�Pd&quot;���j��&#x0;��?h8��g���-)�3�����&#x8;��!t���b&#x1;&lt;�Da&amp;��r~�������D�&amp;j1&#x5;wT�$?;��;+�&lt;&#x19;zs^�g7�&#x5;����e8V)��K��d�cw�&#x13;&amp;&#x7;*J����i&#x3;�,���&#x14;&#x6;&#x7;�gƬ:�����n��9&#x1d;��&#x1b;&#x16;��}&#xd;
��&#x19;��1Pfv\��i�$�խ47��&quot;_&#x14;aZ�p�	S(&#x17;7o�9;��oN�&#x1b;&#xf;9�&#x2;F��T3�&#xc;�C&#x13;�&#x7;@aĿ�a&#x19;&#x0;&#x1a;Je,y��M�&#x1b;�&#xd;���C&#x6;�1�uI�ʓ2�)&#xd;*�&gt;YOnN�����|qr�{V0	Rp&#x10;��&#x1c;,0&#x6;�Ї&#x10;�&#x1;q}��x��5�����	�&apos;�zU��e�:˷�r�j�P�/Ϟj]�&#x3;�&#x8;�Mg�*&#x2;���&#xf;[�(3y��A��&#x13;&#x5;yj?&amp;k�&#x19;s���&#x14;�)�����&#x6;Ϝ��M����ᕤ�-�&#xe;�&#x4;&#x1b;��&#x0;&#x15;��5�x۟:j3�j������&apos;ַ�����d�̄�&#x10;�s@&#x13;�&quot;��3wi������&#x17;&#x4;��!�&#x7f;����&#x16;5H�^G}&amp;����B&#x16;����%�k&#x0;�A�±Ͳ���ښ2s&#x1;�	p��tl�&#x2;�[&#x1b;���&#xf;&#x0;�&#x14;��{:D��#&#x11;b�#&#x17;�N��&#x2;rD;.,��KJ&#x1b;�&#x1a;c�.�,���A&#x16;�t�7�tj��X��ڇ�&#xd;��Y�&#x5;&#xe;&#x7;k��p9Cc��~�&#x17;�&#x4;&#x19;&#x7;Ӗ�0�u��&#x1e;�&#x1a;��&#x18;r*�o؃\cR�,�g��.A�7&#x6;���W&#x14;Q�&#x1f;&#xc;5&#x1d;�c�q��@��α�&quot;��ƷV2&#x14;&apos;ʋ�e}�N�+��*ߏ�*&lt;�f�&#x10;�W�Dm2���2&#x4;1c&#xe;�D�k�&#x8;�m������3&#x17;���8�&#x1a;�FA�A9V�&#xd;
߀F[���Kg&#x85;L&#x6;&#x10;gI!&amp;%xΆM&#x1c;��L��&#x1c;fs�&#x8;&#x4;&#x1e;-y��S��&#x1b;&#x6;�&#xe;̦�fBM� �	��&#xe;�n;�&#x16;L���&#xe;trZ�c^�	5�l�L���F&#x3;S*����K&#x19;��@�@�-�|�K���,�&#x13;7�&#xd;%U�&amp;����a����Lʌ���o�&#x1d;&#xf;�c��csʤ���z3��7�������}=�j�r&#x1;�4c&#xd;1�&#xc;��,���yTHJ?���w&#xe;�1&#xf;Br~&apos;�N��&#x3;�&#x16;�&amp;�Ι�F�fwIQ,K�{&#x1c;+(�Tt&#x17;&#x3;䓠����&#x18;�=�36rL�9��&#x15;�&#x1e;�y��_?�&#x13;&#x11;��6�U��f��&lt;��Na�y]&#x1;5~�:�;&#x0;�x3�f&lt;�&#x16;M���&#x14;&#x1c;�)&#x16;����&#x17;V�c���4&#xd;
�U�τ&#xc;&#x8;R4�&#x15;Ԙ,�1R	F��&amp;��9&#x14;&#x14;�2�o]�&#x11;&#x5;�)��ӳ�b����rN��d^���&#xd;D&#x1a;&#x1;H=��&#x16;��ID�T&#xd;yW6���c�Y��&#x18;��;�?�-7V&#x1b;�Z��U�\��Pd�]���&amp;��&apos;��Z�������-�Kʊ&amp;��Ӣ���-U&#x5;u���dB2��o&#x12;&#x10;e2��5f�&#xe;{�=_-&#xf;T�./&#x1c;��i�E4�C���RL)��Ԛ&#x19;��D��&quot;�&#x8;k-���^3D����y�FGv��&#x1a;�s����q&#x17;&#x1c;P9&#xe;�T��=�Д��&#x1;�l&#x1b;&#xf;�8�Y����&#x19;!��E�S�Jzf��v��&#x11;���&#xe;&#x3;&#x14;�ir�G��&#x17;r�{-{�_euj�&#x1d;Q�c��8-�����P�q�� �z�k)}���9j�g&#x6;�,&#x1a;�Ɍ��&#x6;��I{{Ȫ�&#x11;�}�&#xd;��������,l��h���z䑙�̭&#x1a;&#x15;�N&#x16;&quot;j��6�3_3qH��O2�w����)N�&#x4;&#x1c;&#x19;\EY��ڸk��6���n����&#x16;ls�h�O&#x6;��y�\���s�r&apos;��뫪��Q�&amp;�[_eujze&#x19;�&#x17;&#x7f;O�ZԞ����4OZĹy%�V����T�W&#x3;F�:�&#x1f;3����ͪ�&#x19;���o,S���}n��&#x1d;&#x1f;&gt;�r�7�}F��-&#x10;6&#x3;S&#x11;�&#x4;٧g&lt;W2v�0 L���cn�h�y�ú�6&amp;�&#x0;�౩��&#x13;&amp;� 5^&#xc;�3e�	�sA�&#x13;����}#�c�m�b���&#x11;\Ai&lt;CL#&#x10;����&#x15;{�k��,��+e����&#x19;&#x19;S$3��;�D����&#x1c;a&#x17; U]���)�d�{��8�&#x16;s��8�&#xd;
��G&lt;��U&#x1c;�D&#x15;D�&quot;�&#x19;�U��.�$��[3o��Q&#x19;(�7`p@��(���&#x10;?��:̬�&#x1d;Ӈ����6&#x1a;m`&#x1c;A��xB�{���i�Ŷ&#x18;��������Z��c&#x11;��&#x1e;�g:*f~��G��k_�D&#x0;(֪x|ܺK{&#x14;j��С�3&#x17;&#x11;&#x14;wgT�&#x1f;�:��ˋo{&#x11;rʧ�W&#x16;��*Y�Bʪ���c���s���mΛ�{�ϔL{e���3&#x1d;nLoXo&#x1d;w�	�czc^&#x16;����]���et�A�:ةm_��t�&#xb;q&#x7f;S����հ�\�QhQ��=S&#x1c;�O�����Ll&#x17;c&#x16;z�E&#x7;��&#x10;���&#x1a;^E&#x13;+��G���9�T��)��b&#x7f;. ��Tb�����&#xd;q�Ş&#x8;0_|&#x3;(&#xf;��4.�&amp;��&#x1b;o&quot;��P������ؓau�`���&#x6;3�u7�i����(�&#x3;�mL͘�j������.^���D�&#x13;&#x0;��yx[i���q��]�&#x8;��ld4}&#x19;7&#xd;
cG|Z�������u��&quot;�4og��B�66�H��)ov��$�p&lt;�W��2���^&quot;��xj�5���r�M&#x4;��4M��&#xe;�rr&gt;f&gt;&#x8;�p�G&#x14;��zY&#x1d;yU�뽟�.N����l0&apos;L�9l�x�&#x2;�&#x15;&#x3;Nn&#x2;�~/.W&lt;^&#xe;X���&#x3;Ӗ�(��]&gt;m]���{&#x1b;j?&#xd;
4�tuQn]2R��5Y�ћ��eq)&#x1a;p&amp;L$�x����&lt;Nӵ�M���G�I�D۹�B��T�k�&#x1e;&quot;&#x2;K�f��8iE&apos;&#x17;�3�T�p&#x7f;�LK�.j&#x15;&#x3;*�{�!&#xd;y�Y&#x1b;���/�\4eUm�՞5��&#xb;&#x19;g�����&#x6;邛3&#xd;T&#x1c;&#x5;�`ru���K�M�pt���&#x1;��ʸ`����G��.�&#x12;ᐳ��&#x10;R�4aBX?&#x19;&#x2;�&#x1b;ǟ&#xf;&apos;P��� ��&#x6;=���&#x2;�@�ܻmc�X�����厍��&#x7f;�ʚ�U���2���iW&#x11;rlt���,�_|�m��m��ج�$o�&#xc;�`bԂi�hFB��ׂ&#xe;w�u#���齐�k�ڲ&#xd;
W&#x3;E&#x7;)x/X?&#x4;ކ�&#x13;Y�d��&#x19;�&#x6;˃&#x16;&amp;��כ���G�J��DD��3]g��j�M}t6$&#xb;��t)ٍ���kC=�_�F&#x17;&#x19;�h&#x1e;&#x1c;&#x1e;1��&#x10;�]&#x19;b�Tſ�l�(#;یo&#xf;&#x6;���hI��T7�v_1�&#x7f;&#x1b;�Plx���&#x6;GOa�z&#x13;�k��(Zo�I&#xb;�&#x6;&apos;���$$�֗&#x7;&#x5;��a��Gˣ���Dv/&#x4;3�&#x1;ǔ���n���	@�h�m�1�H��&#x17;@Q0��E���\dK\�n�&#x1e;)�&lt;��-:�&#x0;Y�/&quot;&#xb;\���&#x10;�&#x10;��O�����&#x19;&#xf;�v}�:H!�&#x6;&#x13;:�{��ɐ&#x1c;���`&#x5;m�&#x3;/����7�P&#x1d;���ZNt5�E�]+�&#x1c;R&#x1b;g&#xf;#[&#x6;2o������&#xd;
�*�x&#x14;TPo3��&#x1f;�	�l&#x7f;&#x13;ҧD�PxQI�&#x6;�k���e8&#x1c;ۉ&#x16;�&#xb;m��cB@NP�7�D�y&#x11;��&#xe;�� ��H���&#x15;�&#xb;��pc@ۈ�E;Q75&#x13;?�b&lt;�&#x1f;\&#x383;	&#xb;m�]����C�l5�jːױ��&#x12;�ܣkC�r꾛&#x6;^��(�g_�j����*0���?��a�&#x7;�q��=�!˶S&#xf;�jeֻ:(S&quot;&#x16;jL)!��h6�xycк�I�΄�&amp;&#xe;{��V7t��[���;����|�Ȏ�BM�L1K����� �=f&#x14;�()��)X�_T�tV]��]R���/$W�����&#xd;�&#x8;�ҵ!to��&#x15;�w��ҕ&#x1a;�.�D�T��2&#x1d;&#x1c;rq���;������&#x1b;ٻ��5!Etw�&amp;��閌��ȸ�*�Ӗ���	�ั�CbV��&#x1d;&#x7;�&amp;�4�_�	��E�h	�����&amp;&#x1c;��~��)&#x8;zgܺ͘&#x7f;&#x13;�u���xo=��;&#x5;����ۻ&#xd;
��&#x11;��0�i8Imo��&#xc;&#x13;�n����x�@����z&#x13;2���hA��.���ڹ�!��6uVŖ�!�!&gt;��&#xe;�z�t&#xc;�HNE&#x12;���.�&#x1b;pY%t�^�}Zё/������unۀ6��m�&#x18;�͘M4=�=��&#x16;��7�d1�C5�p=l{�&#x5;��V�%W&#x4;��XxQ��}�&#x17;�����IL�&#xf;���&#xb;Y&#x0;�&#x1;�lH8X_&apos;c)�t�G&#x14;�@�D��:(�&#xe;�P�&#xb;��&#x1e;#�҈yd�&amp;&#x19;���L&#x7f;7�2&#xd;!���V�+&#xd;z���V��L�&#x1d;մt��Jj���&#x1b;N{&quot;Gx����&#x4;;ոX5&#x7;y�z�$��&#x1f;�&lt;&#x7;AgaY�7dVMd� dJ&#x1e;��~�D��u%�ھ�R��&quot;)#��xT�f$_��/�DW&apos;+�.1_[@�&#xd;-���H���m�&#x1c;�n�(�,ܳ&#x1c;�����&quot;/.�!&#x3;ZwZ����&apos;S�M&#x1f;�-�&#x7;G�&#x13;ѿ&#x12;7�0~&#x13;�%�o��	;�ݕ�&#x10;&#xd;
��/�����]��ޱ�:$�}�=��H&#x7;0�[��=�{B�{)&amp;�&#x1f;M�x|&#xc;��0Z*���]�?&#x1f;�B6&#x12;z��Y��%ى�̜��s^&#x1b;�b4@�e&#x4;�D����N6�8�&gt;z�,&#x12;qӱt�`�u-e�4/����|p�48&#x0;�-l��G/�A&#x14;҉Ձ�2ܾfۣ�2�����Fq�Y��&lt;u棓&amp;*&#xb;$�+wz8&#x3;�Td&#x2;)��&#x19;eu�Y&#x15;9}�v�^or�&#x7f;����u��a��Q���u�Y27~9&#xb;w�d��3�[�&#x18;7��4�3/&amp;&gt;\�L�Mbm�Ox3&#x13;�|�J����U�&#xf;[1)��V1��O�K&#x0;N&apos;�7U&#x19;&lt;����&#x17;w��|��&#x16;�&quot;�&#x15;]&#x7f;l��N���&apos;����&#x13;�&amp;b:�Nx∁D&#x19;o�Vө��~m�Oɼ��	/���&#xc;B2[Nm�;�,�A��TO�s��7f0�v�f���&#x7;&lt;��,NLA��۵x[&#x16;��&#x1;H��p6K���,f�r�X&#x15;�8��پ&gt;_mn�z.��&#xd;
؏&#x13;X�&lt;��릧gG�uqT&#x5;�N��)�1xm�&#x1b;���:?;ۇ�&#x0;t�&#x17;#n�2�&#x14;L�4�[���,�&#x14;d\���*&#x4;���&#x8;���|�4&#xf;�&quot;K^$b3{r�e&#xc;��&#x16;�w秧����|�(����tsz�E�2Ǆon��e*�m����V&quot;�&quot;|Z~�����&#x1;�9�ڗ�Y&quot;`��&#xc;����-ɐ&#x17;&amp;��&#x12;P&#x8;/���1&#x5;.9=�)w�-q��8�7��@%&#x0;$.\t���&lt;��x}&#x18;&#x1f;Z,�g��[*���T��ji�w\&#x5;��dR�|!y�5�&#x19;��V~&#x13;������&apos;%f�҃�XR�{fx���&#xc;�&#x11;$1&lt; &#xb;V$�&#xb;&#x6;�R&#x10;eLl�2�eݾ=;������l���缡�&#x17;��&apos;�nE��5|�&#x1a;����B0n5q��z�U_��-KL&#x1;&lt;�&#x1b;B�F&#x2;J�P�&#x13;&#xd;�&#x1e;&quot;ox2sZ�f�&#xe;�����ғ��&#x11;Q�RpP�[��b�+&#x2;�U肇�&#xd;
)&#x11;�I���&#x18;6&#x7;z5���Y�&#x1f;�&#x14;�d�-N&#x0;��#Ők�T��[Ŗa�!L)M�R&apos;�鄗&#xc;U�4I�{���b��&#x1e;�&apos;V�&#x17;&apos;34�&#x19;�&amp;8��eN�&#x1;[2�$�D&#x17;�#4��R�!Gr��&#x18;&#xb;��J�x�Me�&#x14;4��&lt;-�&#x19;e&#x6;f8�Ux٬�&#x16;t�O���=�L�qN&#x0;=½�&gt;&#x17; &#x4;�+M���&apos;�	&#xf;�r&#x1;0��tu&#x6;	S�q$K��&#x6;߶M�9���&apos;��%�0�&#x8;k|2)&#xd;
`�j&#xd;}�&lt;&#x11;X&#xd;��&#x19;N&#x15;�&#x19;&#x2;�4��&#x19;&#xf;��&#x19;!&#x1e;H/\�&#x8;�F&#xd;�ȷ��d��{��.�bRf&lt;�&#xb;څ�L4�&lt;�|�B&#xd;
C��2;&#x1;h��&#xd;�C;�&#x1a;+�6�6���m�&#x1d;]���T�\&#x14;h��t:�&#x7;&#xd;
^��!`��g�~�� f,E&#x6;&amp;�&#xd;�&lt;�I�m�����i�&quot;�&#x7;@:�$ �p�-�0)\Z&#x14;P�X�&#xc;�&gt;�Ê&#x0;#\$&#x8;RT&#x5;�&#x1f;1�&#x6;���&#x19;�&#x4;�q�-�]&quot;J5&#x3;���^r�&#x2;��r-�9�&apos;�r�y���A&#x1;&#x1f;S�M&#xd;
oB`&amp;dq��&#x0;3�&#xb;�&#x12;�N&#xd;&#x10;W�/��L�&lt;��&#x1c;&lt;�&gt;�,��&#x19;�&#x0;q�X��A�e&lt;&#xd;�&#x17;@�sn&#x1e;K��&#x13;&#x6;v��Y�@X� �y�&lt;�6�&#x15;�&#x1a;�&amp;��(&amp;ʰ=L�Jf�*&#x17;&#x19;�&#x19;���d�&#x17;&#x5;�&#x1a;�E�&#x8;t�+����5��na�$,�&#x16;�0&#x15;Kn&#x1f;�L&amp;&#x1c;On&apos;&quot;W&#x2;��~�`m9?1�&#x7;�u�&#x0;�&amp;�&#xb;p&#xb;/�����t*��W�&#x13;�&#x5;&#x19;�ݼ��&#x1a;�ڏ׀��(�&#xb;��37��&#xd;
Q8~��´dZ�e���R$�yv&#x12;:Ɵ�D&#x16;v�&#x8;g���q�]��#��&#x0;\�&#x16;���0!�S��K�&#x1a;�by&#xf;�Η@v㐃�&amp;��fa�&lt;͔�I9�]�y;0&#x10;������&apos;8y&#xc;�	&#x12;ZƼ&#xc;&#x1c;��-`z&quot;�&lt;����$P��̲}���Ҕ�&#x8;&amp;S�X�&#x13;�E^�&#x1b;%� S&#xc;�B�7N�c&#x19;�-,o�d�-.�T̲���Ik1M��&apos;�}~�_n���)/&apos;�s1�!��)A&#x17;�.M&#x16;�&#x14;J&apos;�H�e&#x5;&#xb;�2�j�y�3�w7E#&#x5;�&#x1f;�.K�L#�&#x1e;�F��!�Z��&#xc;T�@&#x18;�:;�W1&#x1a;&quot;&#x11;V.%���S0钹2x�[@�I9�2�&#x4;s�@F��S�$��&#x4;�&#x0;��\�&#x1b;9&#xd;l�&#x4;Lt�}&#x18;�����f厃���m��&#x2;�bz���U��P�&#x8;&#x0;!�ubl0&#x1d;�&#x10;Av9�՛$&#x4;H&#x4;��E&#x19;D)d5D���&#x13;��bT2���0h皿G&#x5;&gt;|{Sl��(&#xd;~�zszb&#x2;�0#B���rj��&#xc;&#x13;&#x3;����1��B�x���ba�3&#xd;
�&#xb;�9��A�!߆w ��=&#x11;&#xc;��&#x2;zZ&apos;̫���]&#x15;;FC&#x17;w&#x8;=���&#x1a;�&#x12;��S�+�_eB���&#x16;:�l1y}�%ᝣh&#x1a;&#x14;6�%�q��@��2����K�&#x14;&#xf;̀E@&#xe;��4&#x5;u&#x8;�&#x0;жE�!�$�d	&#x4;��&#x1;&gt;&quot;̅R,3m𜷽a &apos;�R��Tƫ&#x18;L&lt;�&#xd;
���Ŗdlpk�9#�%�Wc����&#x1e;&#x10;.ߖ��b�`&#x14;��͘��l��#0&#x8;�a�G�&#x1f;�ĩ�*&#x5;&#x3;�}�[Lr&#x2;8p{&#x3;�&#xd;
�1��Ke!�-���&#xe;s�7�&#x16;����&#x4;&#x2;�)&apos;x�7��&#x4;�[���$K5a�;?��1�|����e�yo&#xb;t&#x3;J��&#x90;&#x2;&#x1f;z�*x!9Ȅ&#x17;����m���&#x1;&#x1a;&#x2;�0t{[&#x4;��_����Z�n@&#xf;&apos;��&#x6;&#x8;�(\-��D���X�zi�,��N(�&#x15;�	��W&apos;��&#x10;&#x2;�1&#x7;̷r��2�&#x6;&#x14;t{�!�qRNz�X�)&#x1;�&amp;��t&#x19;f&#x15;�&#x12;b��$OIQ_02&gt;�s5���&#x3;�M%���*(��&lt;�&#x7;����&#x3;&quot;�L�̨&gt;��8��&#x0;&#x10;��X07����$-Ö&#x13;^&#x3;Xb��&#x2;��I��|��T+&#xf;b&#x3;&#xb;&amp;3w2��4\^&#xb;	����&#x1d;�&#x1b;&#xd;
&#x1;l5۞m�6&#x10;2�Iq�=�k1���u��b��&#x8;&#xc;v�|&#x1f;�&#xd;
��p������./ӕ��P&#x15;�7&#x16;dģk�&#xf;1\&#x1b;n��&#xc;�}&#x1d;�5&#x0;����H&#x7;B��Z&#x10;&#x7;�!x��&#xd;
ٙ�K�&gt;�&#x0;P�H��3&#x10;X�1&#x8;�&#x3;��+&lt;�(\���&#x18;���&#x14; ���&#xd;
Ld�jY��\%3H�b&#x3;&#x8;�1����ps�&#x0;�~���&apos;	��&#x2;v��99_Î&#x19;�V;g��k 7&#x6;nkY�O�ͲT�����BU�&#xf;v&lt;v &#x15;&#x7f;W.�ԇL�hX�W�&#x1;���&#x14;ۙl��e&#x7;��d�_+H�1&#x13;��i�p�j&#xc;�M���8%$�d�T5h�4&amp;-#�	&#x14;&#x7;�XA���&#xb;�a�|o_�&#x18;��Gr&#x1f;�A�&#x1b;p(&#x14;�i�&#x1e;X��6q�`MԁI��F�����&#x5fd;&#xd;��&#x1b;N�b���&#x19;�-&#x18;/�jm��ZxW��&#x10;]�&#x7;-&#x1e;rq_��&#x13;�D�&#x1;��&#x4;h����*�������O[�J��s�S;j�����&amp;p�򑩯��r&#xf;��C�hK&gt;*�&#x10;�gG&#x1f;�����+w�n��U�*&#x6;uu�&gt;6�P�~�:������H&#x1f;&#x7f;��7���������7?4�hx|u��M�.f�l.oN�r������|r-@�&#x2;�&#x1f;�+������&amp;�u���o�Ov�m&#x19;(&#x3;�&#x1f;&#xc;�/n���r��HGo-G���&#x1b;o������#&#x1f;x�=&#x17;&#x1f;�ӿ���������k���/���&#x7f;2z�zo&#x7f;&gt;���F�&#x17;^+��ݳ�}� �&#xb;&quot;����s��jV�&#xf;�_��Ŷ�+&#x15;&apos;��&#x15;�q:z��-���%�1#�&gt;��|��^,&#x16;����b����&#x7;���_�&#x1d;��S��&#x17;���o�yg�hU&#x7f;uV�p&amp;�,ϧX��`�&#xc;u4afoo�|�`�b:9�nt��ɗ�Ӣt��n�݁��?^(��~�|�ٳ�U}&#x19;�Y�?�U���s��G�&#x4;jU���ɮ6��&lt;��.&#x1f;mGq�z~#?=[&#x15;��}�&gt;�ˣ������#�C&#x10;�i^�&#x12;��p3G7�c�S�ڿ9z��ۜo�E��k�Mӥ�����}����?�-��&#x13;���z����*V��{G��&#x13;�х�l�/�o�&apos;G&#x17;�W���g�g%�[^xy���&#x7;Q:����&#x17;����+O4�\�HZ&#x17;���K�F�5��C���J�ؗ����@�����+&#x0;���l��q���/\�?�y��-c�Ͽt����wO�+oܸ�&#x13;�k�&#x7f;��������&#x1f;}f�����D�|��3��Ԃ@&gt;��&#x10;��c�/�U&#x7;�0&#x1f;A��y��y&#x14;�&#xf;&quot;�Ҫ��ξ��ι���+�����g?6�p���&#x4;3LR&#x1b;}���J�ݟ�Z&#x11;�l�qr���ے��*d���}!�-ˋi&gt;��d~nD1�L��O���&#x1b;g���k7��t������+͉��ł+r��]��}�^�&#x7f;y��YS8F9�`�F&apos;&#xb;F�&#x7f;&gt;𵗏&#x3;��[��Fϴ&#x15;�U0��إU�&#x1;7&#x17;ysI&gt;&lt;�p�ޕK7���2,��GO��}a9z�S�&apos;�g=��)k�&#xf;D��Ǻ_��%I���IOh��z&lt;~֓���&#x1e;&#x19;]l�E��&#xf;5��&#x4;%�&lt;�V7&#x2;�G�ևR�&#xb;��ϿG&#x1d;�WǕD��b@&#x15;t&#x1c;V&#x15;&#x15;�u��7��&#xb;&#x10;_9&#xb;S�Ư��������xf3��&lt;�M�W�DlN�d�|V�|��&#xb;+��#&#x7f;�ѷ?z���&#x17;^��&apos;_x��&#x17;����iavG�7̝;wFo?u���&#x1f;����&#x1f;�f�dbx&#x4;)���f�U&amp;g�&#x8;ƥ&#x12;&quot;&#x7;Z-�o&lt;�Z��|w|�ؽ��Fo&#x7f;��C?��&gt;]�~#��?�y&#x14;q,��ә��mq�.o��;Ǽ&amp;��W�t��&apos;.&lt;��{��_{���o&gt;rQX�����D*�������?�ξ��5���a��{u��zs{=z��&#xb;&#xf;}�SW���Qݗ�K_��ї7G��&#x1d;�&#x14;ݸ��T_���K�ѥ+��#�&#x11;&#x1e;�K��T&gt;�5&#x15;�&#x16;��x|��g0i�|!�)��� ��&#x7f;����;&#x18;PǛj�VA��&lt;�����_x���&#x17;�t&#x1;�v�&#x1c;&#x0;)��&#x14;��&apos;Xs�;&gt;�UM&#xd;
�&#x1d;=�ʠ���&#x1a; ��1�_^�{z����FH&lt;�&#x0;+&#x1b;]z0%��W�r�&#xe;&#xd;
�&#x19;0���@�]]S&#x3;�P)&#x14;Px^����&apos;��&#x1e;3��ފ�������ok&#x8;�bv���w�h�s��Ϫ��&gt;ݼ{��&#x17;kX&#x13;崮i&#x14;�ã��&#x19;�`����ɚum&#x3;�~��&#x7f;�g��/@��`�:����������:&#x1c;M=�z��y3��h����W&#x1f;�V���&#x12;�Yl�w+��&#x6;&#x7f;�������X��=�ϼ���H.Ԣ���&#x1c;�)]&#x7f;�ZT�q��������[_.������&apos;+	[��f&#x18;A�~8~�&#x1e;�Cu&#x0;WF�5&#x7;=�{&#x17;&#x92;*�a�O}�W��&#xf;����O|��&#x7f;�7?�/&gt;?|��fV�u��_Z��Ɓ ��.���M�����hfg&#x19;3[H��ș�x��+��f��K��e�E��Lϊ���l��?�pJx3�ҹ��3��&lt;&#x13;�y!�w&#xd;
_����m�k�{�z�|����{j��{h�&#x1e;�~��:��&#x16;�1��z��&#x1f;`�?B���&#xe;�R�R&#x4;FU&#x14;����������&#x18;�B&#x7;K&#x1b;�KP��&#x16;�&#x1e;�ݧF&#x1f;&#x1d;&lt;l$/&#x0;�G&#x6;�j����7�&#x4;&amp;�&#x1d;&gt;�&#x5;��;�&#x1e;���H���&#x7;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upload-Time" elementType="Header">
                  <stringProp name="Header.name">Upload-Time</stringProp>
                  <stringProp name="Header.value">1724224748487</stringProp>
                </elementProp>
                <elementProp name="APIKey" elementType="Header">
                  <stringProp name="Header.name">APIKey</stringProp>
                  <stringProp name="Header.value">c1a0db0127964674a0d62fde5ab0fe62-6ec4ac45-cebc-4f80-aa83-b6b9d3a86ed7-7719,cd836626611c4caaa8fc5b2e728ee81d-3b6d6c45-6377-4bf5-9792-dbf8e1881088-7521</stringProp>
                </elementProp>
                <elementProp name="Content-Encoding" elementType="Header">
                  <stringProp name="Header.name">Content-Encoding</stringProp>
                  <stringProp name="Header.value">deflate</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Expect" elementType="Header">
                  <stringProp name="Header.name">Expect</stringProp>
                  <stringProp name="Header.value">100-continue</stringProp>
                </elementProp>
                <elementProp name="AuthMsaDeviceTicket" elementType="Header">
                  <stringProp name="Header.name">AuthMsaDeviceTicket</stringProp>
                  <stringProp name="Header.value">t=GwAmAbuEBAAUbVtUa9wjWgmEIwjX9d7dccnghw8OZgAAECckJ2fjC5Ub8WFB6ntluRbwAIIw8/KoSDA7mXVlulkpv/wXR2XDkUq9Sy0QHbqQX/J9iqOtbs9ZIADwU/kE/4X7755/u5inLUB0QI2JHpRreFs0tThLf/H9SjyvQe95koW0p3LvblUzbmBsQ2TjuO2AEEjbGPZyQyCzzACxPISCWomEh46Kjb//E92lx/TMRi2dLHhMJPKeEBUQNVhcAZ4mBSRzcNBE31o3rkd+XOd+3Pol0ll8GVwgPhBztbR9OsoDKwBqB2BS9RPn8iVejSG4eng+s4HfbtoA0WvdCBVNMUbb1pR5bfmptWa5dTu3nw1pPW+P3df7r9reg7Trd1aNqh8B&amp;p=</stringProp>
                </elementProp>
                <elementProp name="SDK-Version" elementType="Header">
                  <stringProp name="Header.name">SDK-Version</stringProp>
                  <stringProp name="Header.value">EVT-Windows-C++-No-3.7.101.1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/bond-compact-binary</stringProp>
                </elementProp>
                <elementProp name="Client-Id" elementType="Header">
                  <stringProp name="Header.name">Client-Id</stringProp>
                  <stringProp name="Header.value">NO_AUTH</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/safebrowsing/clientreport/realtime-218" enabled="false">
            <stringProp name="HTTPSampler.domain">safebrowsing.google.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/safebrowsing/clientreport/realtime</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#xd;
$https://www.demoblaze.com/index.html&#x10;&#x1;&#x1a;a&#x8;&#x3;&#x10;&#x1;(&#x2;0&#x0;8&#x0;@&#x1;J&#x1d;Chrome/127.0.6533.120/WindowsP&#x2;X&#x2;`&#x1;r+&#x8;&#x1;&#x10;ޡ���2&#x1a; y�1�&#x1f;��V*�N&#x16;^g&#x1;@�jh�&#x8;&#xd;
�`]8��HsPa�&#x1;&#x1;0&#x3;8&#x7;Bz&#xd;
$https://www.demoblaze.com/index.html&#x10;&#x1;&#x1a;&#xf;142.250.206.147&#x1a;	127.0.0.1&quot;#https://www.demoblaze.com/cart.html0&#x1;9&#x0;`&#xd;�&lt;&#x17;yBP&#x3;X&#x0;p&#x0;B�&#x1;&#xd;
#https://www.demoblaze.com/cart.html&#x10;&#x2;&#x1a;&#xf;142.250.206.147&#x1a;	127.0.0.1&quot;*https://www.demoblaze.com/prod.html?idp_=90&#x0;9&#x0;��&lt;&#x17;yBP&#x3;X&#x0;p&#x0;B[&#xd;
*https://www.demoblaze.com/prod.html?idp_=9&#x10;&#x3;&#x1a;&#xf;142.250.206.147&#x1a;	127.0.0.10&#x0;9&#x0;@&#x19;�&lt;&#x17;yBP&#x3;X&#x0;p&#x0;H&#x1;P&#x1;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ya29.a0AcM612x6hdaxt42fWM9jgP-rIE21IO-NcJrfKeVvnuA-dl67aFCH9RWtT0-4-h70hJdiirj7HL659N7mA7it1p6-hZBjEn9n-PTcqcEiR2KZPJT3ICo__2sizxVRnYdOAHHQ5tpzKfcF5kx3NkKkqA93cSmTgGJ8zpJIo8Mm3emupkVM4OvP4iMNRrXARsv45HXSQGdj27pRR6sL_k17MPV_w9OaX_IrUaNpQvsNuyRQ7SQ3GrFGpu1f5EgPYUKEynyp2EJcosIp7AaCgYKAWYSARMSFQHGX2MiT2_rVhwgkojaXKTfFdI_AQ0277</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/octet-stream</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/index.html-219">
            <stringProp name="HTTPSampler.domain">www.demoblaze.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/index.html</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com/cart.html</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;127&quot;, &quot;Chromium&quot;;v=&quot;127&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/config.json-235">
            <stringProp name="HTTPSampler.domain">www.demoblaze.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/config.json</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com/index.html</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;127&quot;, &quot;Chromium&quot;;v=&quot;127&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/check-236" enabled="false">
            <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/check</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">content-type</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/entries-237">
            <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/entries</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;127&quot;, &quot;Chromium&quot;;v=&quot;127&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/check-238">
            <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/check</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;token&quot;:&quot;${Auth_token}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;127&quot;, &quot;Chromium&quot;;v=&quot;127&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/config.json-248">
            <stringProp name="HTTPSampler.domain">www.demoblaze.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/config.json</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com/index.html</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;127&quot;, &quot;Chromium&quot;;v=&quot;127&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/entries-249">
            <stringProp name="HTTPSampler.domain">api.demoblaze.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/entries</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;127&quot;, &quot;Chromium&quot;;v=&quot;127&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/about_demo_hls_600k00000.ts-250">
            <stringProp name="HTTPSampler.domain">hls.demoblaze.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/about_demo_hls_600k00000.ts</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.demoblaze.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;127&quot;, &quot;Chromium&quot;;v=&quot;127&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ProxyControl guiclass="ProxyControlGui" testclass="ProxyControl" testname="HTTP(S) Test Script Recorder" enabled="false">
        <stringProp name="ProxyControlGui.port">8888</stringProp>
        <collectionProp name="ProxyControlGui.exclude_list">
          <stringProp name="-2063843150">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|woff|woff2)</stringProp>
        </collectionProp>
        <collectionProp name="ProxyControlGui.include_list"/>
        <boolProp name="ProxyControlGui.capture_http_headers">true</boolProp>
        <intProp name="ProxyControlGui.grouping_mode">0</intProp>
        <boolProp name="ProxyControlGui.add_assertion">false</boolProp>
        <stringProp name="ProxyControlGui.sampler_type_name"></stringProp>
        <boolProp name="ProxyControlGui.sampler_redirect_automatically">false</boolProp>
        <boolProp name="ProxyControlGui.sampler_follow_redirects">true</boolProp>
        <boolProp name="ProxyControlGui.use_keepalive">true</boolProp>
        <boolProp name="ProxyControlGui.detect_graphql_request">true</boolProp>
        <boolProp name="ProxyControlGui.sampler_download_images">false</boolProp>
        <intProp name="ProxyControlGui.proxy_http_sampler_naming_mode">0</intProp>
        <stringProp name="ProxyControlGui.default_encoding"></stringProp>
        <stringProp name="ProxyControlGui.proxy_prefix_http_sampler_name"></stringProp>
        <stringProp name="ProxyControlGui.proxy_pause_http_sampler"></stringProp>
        <boolProp name="ProxyControlGui.notify_child_sl_filtered">false</boolProp>
        <boolProp name="ProxyControlGui.regex_match">false</boolProp>
        <stringProp name="ProxyControlGui.content_type_include"></stringProp>
        <stringProp name="ProxyControlGui.content_type_exclude"></stringProp>
      </ProxyControl>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>true</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">demoblaze.xml</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
